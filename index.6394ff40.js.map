{"mappings":"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","sources":["./node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/ol/events/Event.js","./node_modules/ol/ObjectEventType.js","./node_modules/ol/Disposable.js","./node_modules/ol/array.js","./node_modules/ol/functions.js","./node_modules/ol/obj.js","./node_modules/ol/events/Target.js","./node_modules/ol/events/EventType.js","./node_modules/ol/events.js","./node_modules/ol/Observable.js","./node_modules/ol/util.js","./node_modules/ol/Object.js","./node_modules/ol/layer/Property.js","./node_modules/ol/AssertionError.js","./node_modules/ol/asserts.js","./node_modules/ol/math.js","./node_modules/ol/layer/Base.js","./node_modules/ol/render/EventType.js","./node_modules/ol/source/State.js","./node_modules/ol/layer/Layer.js","./node_modules/ol/layer/BaseImage.js","./node_modules/ol/ImageState.js","./node_modules/ol/renderer/Layer.js","./node_modules/ol/render/Event.js","./node_modules/ol/transform.js","./node_modules/ol/extent/Relationship.js","./node_modules/ol/extent.js","./node_modules/ol/has.js","./node_modules/ol/dom.js","./node_modules/ol/css.js","./node_modules/ol/render/canvas.js","./node_modules/ol/renderer/canvas/Layer.js","./node_modules/ol/ViewHint.js","./node_modules/ol/proj/Units.js","./node_modules/ol/proj/Projection.js","./node_modules/ol/proj/epsg3857.js","./node_modules/ol/proj/epsg4326.js","./node_modules/ol/proj/projections.js","./node_modules/ol/proj/transforms.js","./node_modules/ol/geom/GeometryType.js","./node_modules/ol/sphere.js","./node_modules/ol/coordinate.js","./node_modules/ol/proj.js","./node_modules/ol/renderer/canvas/ImageLayer.js","./node_modules/ol/layer/Image.js","./node_modules/ol/color.js","./node_modules/ol/style/IconImageCache.js","./node_modules/ol/renderer/Map.js","./node_modules/ol/renderer/Composite.js","./node_modules/ol/CollectionEventType.js","./node_modules/ol/Collection.js","./node_modules/ol/layer/Group.js","./node_modules/ol/MapEvent.js","./node_modules/ol/MapBrowserEvent.js","./node_modules/ol/MapBrowserEventType.js","./node_modules/ol/pointer/EventType.js","./node_modules/ol/MapBrowserEventHandler.js","./node_modules/ol/MapEventType.js","./node_modules/ol/MapProperty.js","./node_modules/ol/structs/PriorityQueue.js","./node_modules/ol/TileState.js","./node_modules/ol/TileQueue.js","./node_modules/ol/ViewProperty.js","./node_modules/ol/centerconstraint.js","./node_modules/ol/resolutionconstraint.js","./node_modules/ol/rotationconstraint.js","./node_modules/ol/easing.js","./node_modules/ol/geom/GeometryLayout.js","./node_modules/ol/geom/flat/transform.js","./node_modules/ol/geom/Geometry.js","./node_modules/ol/geom/SimpleGeometry.js","./node_modules/ol/geom/flat/closest.js","./node_modules/ol/geom/flat/deflate.js","./node_modules/ol/geom/flat/simplify.js","./node_modules/ol/geom/flat/inflate.js","./node_modules/ol/geom/flat/area.js","./node_modules/ol/geom/LinearRing.js","./node_modules/ol/geom/Point.js","./node_modules/ol/geom/flat/contains.js","./node_modules/ol/geom/flat/interiorpoint.js","./node_modules/ol/geom/flat/segments.js","./node_modules/ol/geom/flat/intersectsextent.js","./node_modules/ol/geom/flat/reverse.js","./node_modules/ol/geom/flat/orient.js","./node_modules/ol/geom/Polygon.js","./node_modules/ol/View.js","./node_modules/ol/tilegrid/common.js","./node_modules/ol/size.js","./node_modules/ol/PluggableMap.js","./node_modules/ol/control/Control.js","./node_modules/ol/control/Attribution.js","./node_modules/ol/control/Rotate.js","./node_modules/ol/control/Zoom.js","./node_modules/ol/control/ZoomToExtent.js","./node_modules/ol/control.js","./node_modules/ol/interaction/Property.js","./node_modules/ol/interaction/Interaction.js","./node_modules/ol/interaction/DoubleClickZoom.js","./node_modules/ol/interaction/Pointer.js","./node_modules/ol/events/condition.js","./node_modules/ol/interaction/DragPan.js","./node_modules/ol/interaction/DragRotate.js","./node_modules/ol/render/Box.js","./node_modules/ol/interaction/DragBox.js","./node_modules/ol/interaction/DragZoom.js","./node_modules/ol/events/KeyCode.js","./node_modules/ol/interaction/KeyboardPan.js","./node_modules/ol/interaction/KeyboardZoom.js","./node_modules/ol/Kinetic.js","./node_modules/ol/interaction/MouseWheelZoom.js","./node_modules/ol/interaction/PinchRotate.js","./node_modules/ol/interaction/PinchZoom.js","./node_modules/ol/style/Image.js","./node_modules/ol/colorlike.js","./node_modules/ol/style/RegularShape.js","./node_modules/ol/style/Circle.js","./node_modules/ol/style/Fill.js","./node_modules/ol/style/Stroke.js","./node_modules/ol/style/Style.js","./node_modules/ol/interaction/Select.js","./node_modules/ol/interaction.js","./node_modules/ol/Map.js","./node_modules/ol/ImageBase.js","./node_modules/ol/reproj.js","./node_modules/ol/reproj/Triangulation.js","./node_modules/ol/source/common.js","./node_modules/ol/reproj/Image.js","./node_modules/ol/reproj/common.js","./node_modules/ol/source/Source.js","./node_modules/ol/source/Image.js","./node_modules/ol/Image.js","./node_modules/ol/source/ImageStatic.js","./node_modules/ol/OverlayPositioning.js","./node_modules/ol/Overlay.js","./node_modules/ol/Feature.js","./node_modules/ol/style/IconAnchorUnits.js","./node_modules/ol/style/IconOrigin.js","./node_modules/ol/style/IconImage.js","./node_modules/ol/style/Icon.js","./node_modules/rbush/rbush.min.js","./node_modules/ol/style/TextPlacement.js","./node_modules/ol/style/Text.js","./node_modules/ol/structs/RBush.js","./node_modules/ol/source/VectorEventType.js","./node_modules/ol/loadingstrategy.js","./node_modules/ol/format/FormatType.js","./node_modules/ol/featureloader.js","./node_modules/ol/source/Vector.js","./node_modules/ol/layer/BaseVector.js","./node_modules/ol/render/canvas/Instruction.js","./node_modules/ol/render/VectorContext.js","./node_modules/ol/render/canvas/Builder.js","./node_modules/ol/render/canvas/ImageBuilder.js","./node_modules/ol/render/canvas/LineStringBuilder.js","./node_modules/ol/render/canvas/PolygonBuilder.js","./node_modules/ol/geom/flat/straightchunk.js","./node_modules/ol/render/canvas/TextBuilder.js","./node_modules/ol/render/canvas/BuilderGroup.js","./node_modules/ol/render/canvas/BuilderType.js","./node_modules/ol/geom/flat/textpath.js","./node_modules/ol/geom/flat/length.js","./node_modules/ol/render/canvas/Executor.js","./node_modules/ol/render/canvas/ExecutorGroup.js","./node_modules/ol/render/canvas/Immediate.js","./node_modules/ol/renderer/vector.js","./node_modules/ol/renderer/canvas/VectorLayer.js","./node_modules/ol/render/canvas/hitdetect.js","./node_modules/ol/layer/Vector.js","./node_modules/ol/geom/MultiPoint.js","./node_modules/ol/geom/GeometryCollection.js","./node_modules/ol/format/Feature.js","./node_modules/ol/format/JSONFeature.js","./node_modules/ol/geom/flat/interpolate.js","./node_modules/ol/geom/LineString.js","./node_modules/ol/geom/MultiLineString.js","./node_modules/ol/geom/MultiPolygon.js","./node_modules/ol/geom/flat/center.js","./node_modules/ol/format/GeoJSON.js","./node_modules/ol/control/ScaleLine.js","./main.js","./modules/modules.js"],"sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$export(e, n, v) {\n  Object.defineProperty(e, n, {get: v, enumerable: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.5.0';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Apply any properties from another object without triggering events.\n     * @param {BaseObject} source The source object.\n     * @protected\n     */\n    BaseObject.prototype.applyProperties = function (source) {\n        if (!source.values_) {\n            return;\n        }\n        assign(this.values_ || (this.values_ = {}), source.values_);\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key)\n        ? changeEventTypeCache[key]\n        : (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex =\n            zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nvar BaseImageLayer = /** @class */ (function (_super) {\n    __extends(BaseImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function BaseImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return BaseImageLayer;\n}(Layer));\nexport default BaseImageLayer;\n//# sourceMappingURL=BaseImage.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        /**\n         * @type {import(\"../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length\n        ? opt_canvasPool.shift()\n        : WORKER_OFFSCREEN_CANVAS\n            ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n            : document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    return function (fontSpec) {\n        var height = textHeights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                height =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                document.body.removeChild(div);\n            }\n            textHeights[fontSpec] = height;\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { containsCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === '' &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context &&\n            (context.canvas.width === 0 ||\n                context.canvas.style.transform === transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var layer = this.getLayer();\n        var layerExtent = layer.getExtent();\n        if (layerExtent) {\n            var renderCoordinate = applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n            /** get only data inside of the layer extent */\n            if (!containsCoordinate(layerExtent, renderCoordinate)) {\n                return null;\n            }\n        }\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    /**\n     * Degrees\n     * @api\n     */\n    DEGREES: 'degrees',\n    /**\n     * Feet\n     * @api\n     */\n    FEET: 'ft',\n    /**\n     * Meters\n     * @api\n     */\n    METERS: 'm',\n    /**\n     * Pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n    /**\n     * Tile Pixels\n     * @api\n     */\n    TILE_PIXELS: 'tile-pixels',\n    /**\n     * US Feet\n     * @api\n     */\n    USFEET: 'us-ft',\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport var MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (HALF_SIZE * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > MAX_SAFE_Y) {\n            y = MAX_SAFE_Y;\n        }\n        else if (y < -MAX_SAFE_Y) {\n            y = -MAX_SAFE_Y;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return (cache[code] ||\n        cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n        null);\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { getDistance } from './sphere.js';\nimport { getWorldsAway } from './coordinate.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            if (toEPSG4326_1 === identityTransform && units !== Units.DEGREES) {\n                // no transform is available\n                pointResolution = resolution * projection.getMetersPerUnit();\n            }\n            else {\n                var vertices = [\n                    point[0] - resolution / 2,\n                    point[1],\n                    point[0] + resolution / 2,\n                    point[1],\n                    point[0],\n                    point[1] - resolution / 2,\n                    point[0],\n                    point[1] + resolution / 2,\n                ];\n                vertices = toEPSG4326_1(vertices, vertices, 2);\n                var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n                var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n                pointResolution = (width + height) / 2;\n            }\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ViewHint from '../../ViewHint.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport { assign } from '../../obj.js';\nimport { compose as composeTransform, makeInverse } from '../../transform.js';\nimport { containsExtent, intersects } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n        }\n        if (!hints[ViewHint.ANIMATING] &&\n            !hints[ViewHint.INTERACTING] &&\n            !isEmpty(renderedExtent)) {\n            if (imageSource) {\n                var projection = viewState.projection;\n                if (!ENABLE_RASTER_REPROJECTION) {\n                    var sourceProjection = imageSource.getProjection();\n                    if (sourceProjection) {\n                        projection = sourceProjection;\n                    }\n                }\n                var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n                if (image && this.loadImage(image)) {\n                    this.image_ = image;\n                }\n            }\n            else {\n                this.image_ = null;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = size_1;\n            height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent) {\n            var layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n            clipped =\n                !containsExtent(layerExtent, frameState.extent) &&\n                    intersects(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform, width / 2, height / 2, scale, scale, 0, (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution, (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution);\n        this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n        var dx = transform[4];\n        var dy = transform[5];\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        assign(context, this.getLayer().getSource().getContextOptions());\n        this.preRender(context, frameState);\n        if (dw >= 0.5 && dh >= 0.5) {\n            var opacity = layerState.opacity;\n            var previousAlpha = void 0;\n            if (opacity !== 1) {\n                previousAlpha = this.context.globalAlpha;\n                this.context.globalAlpha = opacity;\n            }\n            this.context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n            if (opacity !== 1) {\n                this.context.globalAlpha = previousAlpha;\n            }\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar ImageLayer = /** @class */ (function (_super) {\n    __extends(ImageLayer, _super);\n    /**\n     * @param {import(\"./BaseImage.js\").Options=} opt_options Layer options.\n     */\n    function ImageLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     */\n    ImageLayer.prototype.createRenderer = function () {\n        return new CanvasImageLayerRenderer(this);\n    };\n    return ImageLayer;\n}(BaseImageLayer));\nexport default ImageLayer;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature\n * @property {import(\"../layer/Layer.js\").default} layer\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} distanceSq\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback\n * @template T\n */\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n            return callback.call(thisArg, feature, managed ? layer : null, geometry);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var matches = /** @type {Array<HitMatch<T>>} */ ([]);\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = layerState.layer;\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, matches);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        if (matches.length === 0) {\n            return undefined;\n        }\n        var order = 1 / matches.length;\n        matches.forEach(function (m, i) { return (m.distanceSq += i * order); });\n        matches.sort(function (a, b) { return a.distanceSq - b.distanceSq; });\n        matches.some(function (m) {\n            return (result = m.callback(m.feature, m.layer, m.geometry));\n        });\n        return result;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @abstract\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        /**\n         * @type {Array<import(\"../layer/BaseVector.js\").default>}\n         */\n        var declutterLayers = [];\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n            if ('getDeclutter' in layer) {\n                declutterLayers.push(layer);\n            }\n        }\n        for (var i = declutterLayers.length - 1; i >= 0; --i) {\n            declutterLayers[i].renderDeclutter(frameState);\n        }\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n         * @type {boolean}\n         */\n        _this.emulateClicks_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance\n            ? moveTolerance * DEVICE_PIXEL_RATIO\n            : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(\n            /** @this {MapBrowserEventHandler} */\n            function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (this.emulateClicks_ &&\n            !newEvent.propagationStopped &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.emulateClicks_ = this.activePointers_ === 0;\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            var doc = this.map_.getOwnerDocument();\n            this.dragListenerKeys_.push(listen(doc, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ ||\n            this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if ((tile.hifi && state === TileState.LOADED) ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @param {Array<number>=} opt_centerShift Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n            var shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n            var minX = extent[0] + viewWidth / 2 + shiftX;\n            var maxX = extent[2] - viewWidth / 2 + shiftX;\n            var minY = extent[1] + viewHeight / 2 + shiftY;\n            var maxY = extent[3] - viewHeight / 2 + shiftY;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in counter-clockwise radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        point.applyProperties(this);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; offset + stride < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge === 0 ? undefined : edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        var polygon = new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        polygon.applyProperties(this);\n        return polygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * Padding (in css pixels).\n         * If the map viewport is partially covered with other content (overlays) along\n         * its edges, this setting allows to shift the center of the viewport away from that\n         * content. The order of the values in the array is top, right, bottom, left.\n         * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n         * @type {Array<number>|undefined}\n         * @api\n         */\n        this.padding = options.padding;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided,\n     * the map's last known viewport size will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * Returns the size of the viewport minus padding.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n     */\n    View.prototype.getViewportSizeMinusPadding_ = function (opt_rotation) {\n        var size = this.getViewportSize_(opt_rotation);\n        var padding = this.padding;\n        if (padding) {\n            size = [\n                size[0] - padding[1] - padding[3],\n                size[1] - padding[0] - padding[2],\n            ];\n        }\n        return size;\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var padding = this.padding;\n        if (padding) {\n            var reducedSize = this.getViewportSizeMinusPadding_();\n            center = calculateCenterOn(center, this.getViewportSize_(), [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n        }\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, opt_options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSizeMinusPadding_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = this.getConstrainedCenter([centerX, centerY], resolution);\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: center,\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        this.setCenterInternal(calculateCenterOn(coordinate, size, position, this.getResolution(), this.getRotation()));\n    };\n    /**\n     * Calculates the shift between map and viewport center.\n     * @param {import(\"./coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {import(\"./size.js\").Size} size Size.\n     * @return {Array<number>|undefined} Center shift.\n     */\n    View.prototype.calculateCenterShift = function (center, resolution, rotation, size) {\n        var centerShift;\n        var padding = this.padding;\n        if (padding && center) {\n            var reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n            var shiftedCenter = calculateCenterOn(center, size, [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]], resolution, rotation);\n            centerShift = [\n                center[0] - shiftedCenter[0],\n                center[1] - shiftedCenter[1],\n            ];\n        }\n        return centerShift;\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, false, this.calculateCenterShift(this.targetCenter_, newResolution, newRotation, size));\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n    // calculate rotated position\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n    return [centerX, centerY];\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS, } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {import(\"rbush\").default} declutterTree\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = /** @this {PluggableMap} */ function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined ? options.hitTolerance : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @return {!Document} The document where the map is displayed.\n     */\n    PluggableMap.prototype.getOwnerDocument = function () {\n        return this.getTargetElement()\n            ? this.getTargetElement().ownerDocument\n            : document;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var doc = this.getOwnerDocument();\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : doc;\n            var target = 'host' in rootNode // ShadowRoot\n                ? /** @type {ShadowRoot} */ (rootNode).elementFromPoint(originalEvent.clientX, originalEvent.clientY)\n                : /** @type {Node} */ (originalEvent.target);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === doc ? doc.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            var interactionsArray = this.getInteractions().getArray().slice();\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (interaction.getMap() !== this ||\n                    !interaction.getActive() ||\n                    !this.getTargetElement()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont || mapBrowserEvent.propagationStopped) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderTimeoutHandle_ = undefined;\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var _this = this;\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterTree: null,\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        if (!this.postRenderTimeoutHandle_) {\n            this.postRenderTimeoutHandle_ = setTimeout(function () {\n                _this.postRenderTimeoutHandle_ = undefined;\n                _this.handlePostRender();\n            }, 0);\n        }\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth']),\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view !== undefined ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.userCollapsed_ = _this.collapsed_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var expandClassName = options.expandClassName !== undefined\n            ? options.expandClassName\n            : className + '-expand';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        var collapseClassName = options.collapseClassName !== undefined\n            ? options.collapseClassName\n            : className + '-collpase';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n            _this.collapseLabel_.className = collapseClassName;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n            _this.label_.className = expandClassName;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var collapsible = true;\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            collapsible =\n                collapsible && source.getAttributionsCollapsible() !== false;\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        if (!this.overrideCollapsible_) {\n            this.setCollapsible(collapsible);\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n        this.userCollapsed_ = this.collapsed_;\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (this.userCollapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        this.userCollapsed_ = collapsed;\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        var compassClassName = options.compassClassName !== undefined\n            ? options.compassClassName\n            : 'ol-compass';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = compassClassName;\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add(compassClassName);\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInClassName = options.zoomInClassName !== undefined\n            ? options.zoomInClassName\n            : className + '-in';\n        var zoomOutClassName = options.zoomOutClassName !== undefined\n            ? options.zoomOutClassName\n            : className + '-out';\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = zoomInClassName;\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = zoomOutClassName;\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = /** @class */ (function (_super) {\n    __extends(ZoomToExtent, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function ZoomToExtent(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        /**\n         * @type {?import(\"../extent.js\").Extent}\n         * @protected\n         */\n        _this.extent = options.extent ? options.extent : null;\n        var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n        var label = options.label !== undefined ? options.label : 'E';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(typeof label === 'string' ? document.createTextNode(label) : label);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    ZoomToExtent.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleZoomToExtent();\n    };\n    /**\n     * @protected\n     */\n    ZoomToExtent.prototype.handleZoomToExtent = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        var extent = !this.extent\n            ? view.getProjection().getExtent()\n            : this.extent;\n        view.fitInternal(polygonFromExtent(extent));\n    };\n    return ZoomToExtent;\n}(Control));\nexport default ZoomToExtent;\n//# sourceMappingURL=ZoomToExtent.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions=} opt_options Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            browserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.originalEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n    var conditions = arguments;\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} All conditions passed.\n     */\n    return function (event) {\n        var pass = true;\n        for (var i = 0, ii = conditions.length; i < ii; ++i) {\n            pass = pass && conditions[i](event);\n            if (!pass) {\n                break;\n            }\n        }\n        return pass;\n    };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n    return event.map.getTargetElement().hasAttribute('tabindex')\n        ? focus(event)\n        : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n    /**\n     * Triggered upon drag box canceled.\n     * @event DragBoxEvent#boxcancel\n     * @api\n     */\n    BOXCANCEL: 'boxcancel',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\nexport { DragBoxEvent };\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        var completeBox = this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel);\n        if (completeBox) {\n            this.onBoxEnd(mapBrowserEvent);\n        }\n        this.dispatchEvent(new DragBoxEvent(completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL, mapBrowserEvent.coordinate, mapBrowserEvent));\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter, } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n        var extent = this.getGeometry().getExtent();\n        if (this.out_) {\n            var mapExtent = view.calculateExtentInternal(size);\n            var boxPixelExtent = createOrUpdateFromCoordinates([\n                map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n                map.getPixelFromCoordinateInternal(getTopRight(extent)),\n            ]);\n            var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n            scaleFromCenter(mapExtent, 1 / factor);\n            extent = mapExtent;\n        }\n        var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n        var center = view.getConstrainedCenter(getCenter(extent), resolution);\n        view.animateInternal({\n            resolution: resolution,\n            center: center,\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                keyEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        wheelEvent.preventDefault();\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\nimport { toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number|import(\"../size.js\").Size} scale\n * @property {Array<number>} displacement\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.displacement_ = options.displacement;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number|import(\"../size.js\").Size} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    ImageStyle.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the displacement of the shape\n     * @return {Array<number>} Shape's center displacement\n     * @api\n     */\n    ImageStyle.prototype.getDisplacement = function () {\n        return this.displacement_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function () {\n        return abstract();\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    ImageStyle.prototype.getPixelRatio = function (pixelRatio) {\n        return 1;\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale);\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.listenImageChange = function (listener) {\n        abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../render/canvas.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: options.scale !== undefined ? options.scale : 1,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ =\n            options.radius !== undefined ? options.radius : options.radius1;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @return {HTMLCanvasElement} Image element.\n     */\n    RegularShape.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionCanvas_) {\n            var renderOptions = this.createRenderOptions();\n            this.createHitDetectionCanvas_(renderOptions);\n        }\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        if (!this.canvas_[pixelRatio || 1]) {\n            var renderOptions = this.createRenderOptions();\n            var context = createCanvasContext2D(renderOptions.size * pixelRatio || 1, renderOptions.size * pixelRatio || 1);\n            this.draw_(renderOptions, context, 0, 0, pixelRatio || 1);\n            this.canvas_[pixelRatio || 1] = context.canvas;\n        }\n        return this.canvas_[pixelRatio || 1];\n    };\n    /*\n     * Get the image pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * */\n    RegularShape.prototype.getPixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @return {import(\"../size.js\").Size} Size.\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.listenImageChange = function (listener) { };\n    /**\n     * Load not yet loaded URI.\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener) { };\n    /**\n     * @returns {RenderOptions}  The render options\n     * @protected\n     */\n    RegularShape.prototype.createRenderOptions = function () {\n        var lineCap = defaultLineCap;\n        var lineJoin = defaultLineJoin;\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        return {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit,\n        };\n    };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render = function () {\n        var renderOptions = this.createRenderOptions();\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.draw_(renderOptions, context, 0, 0, 1);\n        this.canvas_ = {};\n        this.canvas_[1] = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        var size = context.canvas.width;\n        var imageSize = size;\n        var displacement = this.getDisplacement();\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     * @param {number} pixelRatio The pixel ratio.\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y, pixelRatio) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = renderOptions.lineCap;\n            context.lineJoin = renderOptions.lineJoin;\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionCanvas_ = this.getImage(1);\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            // determine if fill is transparent (or pattern or gradient)\n            var opacity = 0;\n            if (typeof color === 'string') {\n                color = asArray(color);\n            }\n            if (color === null) {\n                opacity = 1;\n            }\n            else if (Array.isArray(color)) {\n                opacity = color.length === 4 ? color[3] : 1;\n            }\n            if (opacity === 0) {\n                // if a transparent fill style is set, create an extra hit-detection image\n                // with a default fill style\n                var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n                this.hitDetectionCanvas_ = context.canvas;\n                this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = this.radius2_ !== undefined ? this.radius2_ : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = (i * 2 * Math.PI) / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke,\n            scale: options.scale !== undefined ? options.scale : 1,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            rotateWithView: options.rotateWithView !== undefined ? options.rotateWithView : false,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n        }) || this;\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {CircleStyle} The cloned style.\n     * @api\n     */\n    CircleStyle.prototype.clone = function () {\n        var scale = this.getScale();\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            displacement: this.getDisplacement().slice(),\n        });\n        style.setOpacity(this.getOpacity());\n        return style;\n    };\n    /**\n     * Set the circle radius.\n     *\n     * @param {number} radius Circle radius.\n     * @api\n     */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n        this.render();\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {CanvasLineCap|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {CanvasLineJoin|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth(),\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {CanvasLineCap|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {CanvasLineJoin|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {CanvasLineCap|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {CanvasLineJoin|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {import(\"./Image.js\").default}\n         */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex(),\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)',\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25,\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5,\n                }),\n                fill: fill,\n                stroke: stroke,\n            }),\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5],\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2,\n            }),\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width,\n            }),\n        }),\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue,\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2,\n                }),\n            }),\n            zIndex: Infinity,\n        }),\n    ];\n    styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] = styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport { TRUE } from '../functions.js';\nimport { clear } from '../obj.js';\nimport { createEditingStyle } from '../style/Style.js';\nimport { extend, includes } from '../array.js';\nimport { getUid } from '../util.js';\nimport { never, shiftKeyOnly, singleClick } from '../events/condition.js';\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n    /**\n     * Triggered when feature(s) has been (de)selected.\n     * @event SelectEvent#select\n     * @api\n     */\n    SELECT: 'select',\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /** @class */ (function (_super) {\n    __extends(SelectEvent, _super);\n    /**\n     * @param {SelectEventType} type The event type.\n     * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n     * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n     *     {@link module:ol/MapBrowserEvent}.\n     */\n    function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Selected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.selected = selected;\n        /**\n         * Deselected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.deselected = deselected;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return SelectEvent;\n}(Event));\nexport { SelectEvent };\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object.<number, import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nvar originalFeatureStyles = {};\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /** @class */ (function (_super) {\n    __extends(Select, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Select(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         */\n        _this.boundAddFeature_ = _this.addFeature_.bind(_this);\n        /**\n         * @private\n         */\n        _this.boundRemoveFeature_ = _this.removeFeature_.bind(_this);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : singleClick;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.addCondition_ = options.addCondition ? options.addCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.removeCondition_ = options.removeCondition\n            ? options.removeCondition\n            : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.toggleCondition_ = options.toggleCondition\n            ? options.toggleCondition\n            : shiftKeyOnly;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multi_ = options.multi ? options.multi : false;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @private\n         * @type {import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n         */\n        _this.style_ =\n            options.style !== undefined ? options.style : getDefaultStyleFunction();\n        /**\n         * @private\n         * @type {import(\"../Collection.js\").default}\n         */\n        _this.features_ = options.features || new Collection();\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * An association between selected feature (key)\n         * and layer (value)\n         * @private\n         * @type {Object<string, import(\"../layer/Layer.js\").default>}\n         */\n        _this.featureLayerAssociation_ = {};\n        return _this;\n    }\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @private\n     */\n    Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n        this.featureLayerAssociation_[getUid(feature)] = layer;\n    };\n    /**\n     * Get the selected features.\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n     * @api\n     */\n    Select.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n     * the (last) selected feature. Note that this will not work with any\n     * programmatic method like pushing features to\n     * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n     * @return {import('../layer/Vector.js').default} Layer.\n     * @api\n     */\n    Select.prototype.getLayer = function (feature) {\n        return /** @type {import('../layer/Vector.js').default} */ (this\n            .featureLayerAssociation_[getUid(feature)]);\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map, if any,  and attach it to a new\n     * map, if any. Pass `null` to just remove the interaction from the current map.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Select.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        if (currentMap && this.style_) {\n            this.features_.forEach(this.restorePreviousStyle_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            this.features_.addEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n            this.features_.addEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n            if (this.style_) {\n                this.features_.forEach(this.applySelectedStyle_.bind(this));\n            }\n        }\n        else {\n            this.features_.removeEventListener(CollectionEventType.ADD, this.boundAddFeature_);\n            this.features_.removeEventListener(CollectionEventType.REMOVE, this.boundRemoveFeature_);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.addFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.applySelectedStyle_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.removeFeature_ = function (evt) {\n        var feature = evt.element;\n        if (this.style_) {\n            this.restorePreviousStyle_(feature);\n        }\n    };\n    /**\n     * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n     */\n    Select.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.applySelectedStyle_ = function (feature) {\n        var key = getUid(feature);\n        if (!(key in originalFeatureStyles)) {\n            originalFeatureStyles[key] = feature.getStyle();\n        }\n        feature.setStyle(this.style_);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Select.prototype.restorePreviousStyle_ = function (feature) {\n        var interactions = this.getMap().getInteractions().getArray();\n        for (var i = interactions.length - 1; i >= 0; --i) {\n            var interaction = interactions[i];\n            if (interaction !== this &&\n                interaction instanceof Select &&\n                interaction.getStyle() &&\n                interaction.getFeatures().getArray().lastIndexOf(feature) !== -1) {\n                feature.setStyle(interaction.getStyle());\n                return;\n            }\n        }\n        var key = getUid(feature);\n        feature.setStyle(originalFeatureStyles[key]);\n        delete originalFeatureStyles[key];\n    };\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @private\n     */\n    Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n        delete this.featureLayerAssociation_[getUid(feature)];\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n     * selected state of features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {Select}\n     */\n    Select.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var add = this.addCondition_(mapBrowserEvent);\n        var remove = this.removeCondition_(mapBrowserEvent);\n        var toggle = this.toggleCondition_(mapBrowserEvent);\n        var set = !add && !remove && !toggle;\n        var map = mapBrowserEvent.map;\n        var features = this.getFeatures();\n        var deselected = [];\n        var selected = [];\n        if (set) {\n            // Replace the currently selected feature(s) with the feature(s) at the\n            // pixel, or clear the selected feature(s) if there is no feature at\n            // the pixel.\n            clear(this.featureLayerAssociation_);\n            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, \n            /**\n             * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             * @return {boolean|undefined} Continue to iterate over the features.\n             */\n            function (feature, layer) {\n                if (this.filter_(feature, layer)) {\n                    selected.push(feature);\n                    this.addFeatureLayerAssociation_(feature, layer);\n                    return !this.multi_;\n                }\n            }.bind(this), {\n                layerFilter: this.layerFilter_,\n                hitTolerance: this.hitTolerance_,\n            });\n            for (var i = features.getLength() - 1; i >= 0; --i) {\n                var feature = features.item(i);\n                var index = selected.indexOf(feature);\n                if (index > -1) {\n                    // feature is already selected\n                    selected.splice(index, 1);\n                }\n                else {\n                    features.remove(feature);\n                    deselected.push(feature);\n                }\n            }\n            if (selected.length !== 0) {\n                features.extend(selected);\n            }\n        }\n        else {\n            // Modify the currently selected feature(s).\n            map.forEachFeatureAtPixel(mapBrowserEvent.pixel, \n            /**\n             * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             * @return {boolean|undefined} Continue to iterate over the features.\n             */\n            function (feature, layer) {\n                if (this.filter_(feature, layer)) {\n                    if ((add || toggle) && !includes(features.getArray(), feature)) {\n                        selected.push(feature);\n                        this.addFeatureLayerAssociation_(feature, layer);\n                    }\n                    else if ((remove || toggle) &&\n                        includes(features.getArray(), feature)) {\n                        deselected.push(feature);\n                        this.removeFeatureLayerAssociation_(feature);\n                    }\n                    return !this.multi_;\n                }\n            }.bind(this), {\n                layerFilter: this.layerFilter_,\n                hitTolerance: this.hitTolerance_,\n            });\n            for (var j = deselected.length - 1; j >= 0; --j) {\n                features.remove(deselected[j]);\n            }\n            features.extend(selected);\n        }\n        if (selected.length > 0 || deselected.length > 0) {\n            this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n        }\n        return true;\n    };\n    return Select;\n}(Interaction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n    extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n    return function (feature) {\n        if (!feature.getGeometry()) {\n            return null;\n        }\n        return styles[feature.getGeometry().getType()];\n    };\n}\nexport default Select;\n//# sourceMappingURL=Select.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './source/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    assign(context, opt_contextOptions);\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    assign(stitchContext, opt_contextOptions);\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() ||\n            opt_contextOptions === IMAGE_SMOOTHING_DISABLED) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceResolution, render as renderReprojected, } from '../reproj.js';\nimport { getCenter, getHeight, getIntersection, getWidth } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /** @class */ (function (_super) {\n    __extends(ReprojImage, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n     * @param {number} targetResolution Target resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {FunctionType} getImageFunction\n     *     Function returning source images (extent, resolution, pixelRatio).\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction, opt_contextOptions) {\n        var _this = this;\n        var maxSourceExtent = sourceProj.getExtent();\n        var maxTargetExtent = targetProj.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        var errorThresholdInPixels = ERROR_THRESHOLD;\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        var sourceExtent = triangulation.calculateSourceExtent();\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n        var state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.targetProj_ = targetProj;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = triangulation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.targetResolution_ = targetResolution;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.targetExtent_ = targetExtent;\n        /**\n         * @private\n         * @type {import(\"../ImageBase.js\").default}\n         */\n        _this.sourceImage_ = sourceImage;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourcePixelRatio_ = sourcePixelRatio;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceListenerKey_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    ReprojImage.prototype.disposeInternal = function () {\n        if (this.state == ImageState.LOADING) {\n            this.unlistenSource_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @return {HTMLCanvasElement} Image.\n     */\n    ReprojImage.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    ReprojImage.prototype.getProjection = function () {\n        return this.targetProj_;\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.reproject_ = function () {\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED) {\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [\n                {\n                    extent: this.sourceImage_.getExtent(),\n                    image: this.sourceImage_.getImage(),\n                },\n            ], 0, undefined, this.contextOptions_);\n        }\n        this.state = sourceState;\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojImage.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                this.reproject_();\n            }\n            else {\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n                    var sourceState = this.sourceImage_.getState();\n                    if (sourceState == ImageState.LOADED ||\n                        sourceState == ImageState.ERROR) {\n                        this.unlistenSource_();\n                        this.reproject_();\n                    }\n                }, this);\n                this.sourceImage_.load();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.unlistenSource_ = function () {\n        unlistenByKey(\n        /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n        this.sourceListenerKey_ = null;\n    };\n    return ReprojImage;\n}(ImageBase));\nexport default ReprojImage;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { abstract } from '../util.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport { linearFindNearest } from '../array.js';\n/**\n * @enum {string}\n */\nexport var ImageSourceEventType = {\n    /**\n     * Triggered when an image starts loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n     * @api\n     */\n    IMAGELOADSTART: 'imageloadstart',\n    /**\n     * Triggered when an image finishes loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n     * @api\n     */\n    IMAGELOADEND: 'imageloadend',\n    /**\n     * Triggered if image loading results in an error.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n     * @api\n     */\n    IMAGELOADERROR: 'imageloaderror',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */ (function (_super) {\n    __extends(ImageSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Image.js\").default} image The image.\n     */\n    function ImageSourceEvent(type, image) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The image related to the event.\n         * @type {import(\"../Image.js\").default}\n         * @api\n         */\n        _this.image = image;\n        return _this;\n    }\n    return ImageSourceEvent;\n}(Event));\nexport { ImageSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */ (function (_super) {\n    __extends(ImageSource, _super);\n    /**\n     * @param {Options} options Single image source options.\n     */\n    function ImageSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            state: options.state,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.resolutions_ =\n            options.resolutions !== undefined ? options.resolutions : null;\n        /**\n         * @private\n         * @type {import(\"../reproj/Image.js\").default}\n         */\n        _this.reprojectedImage_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.reprojectedRevision_ = 0;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        return _this;\n    }\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    ImageSource.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    ImageSource.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n    ImageSource.prototype.findNearestResolution = function (resolution) {\n        if (this.resolutions_) {\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\n            resolution = this.resolutions_[idx];\n        }\n        return resolution;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     */\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            if (sourceProjection) {\n                projection = sourceProjection;\n            }\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\n        }\n        else {\n            if (this.reprojectedImage_) {\n                if (this.reprojectedRevision_ == this.getRevision() &&\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\n                    this.reprojectedImage_.getResolution() == resolution &&\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\n                    return this.reprojectedImage_;\n                }\n                this.reprojectedImage_.dispose();\n                this.reprojectedImage_ = null;\n            }\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n            }.bind(this), this.contextOptions_);\n            this.reprojectedRevision_ = this.getRevision();\n            return this.reprojectedImage_;\n        }\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     * @protected\n     */\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    ImageSource.prototype.handleImageChange = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        switch (image.getState()) {\n            case ImageState.LOADING:\n                this.loading = true;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n                break;\n            case ImageState.LOADED:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n                break;\n            case ImageState.ERROR:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n                break;\n            default:\n            // pass\n        }\n    };\n    return ImageSource;\n}(Source));\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\nexport default ImageSource;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/ImageStatic\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventType from '../events/EventType.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport ImageState from '../ImageState.js';\nimport ImageWrapper from '../Image.js';\nimport { assign } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getHeight, getWidth, intersects } from '../extent.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = /** @class */ (function (_super) {\n    __extends(Static, _super);\n    /**\n     * @param {Options} options ImageStatic options.\n     */\n    function Static(options) {\n        var _this = this;\n        var crossOrigin = options.crossOrigin !== undefined ? options.crossOrigin : null;\n        var /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction = options.imageLoadFunction !== undefined\n            ? options.imageLoadFunction\n            : defaultImageLoadFunction;\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            imageSmoothing: options.imageSmoothing,\n            projection: getProjection(options.projection),\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.imageExtent_ = options.imageExtent;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = new ImageWrapper(_this.imageExtent_, undefined, 1, _this.url_, crossOrigin, imageLoadFunction);\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = options.imageSize ? options.imageSize : null;\n        _this.image_.addEventListener(EventType.CHANGE, _this.handleImageChange.bind(_this));\n        return _this;\n    }\n    /**\n     * Returns the image extent\n     * @return {import(\"../extent.js\").Extent} image extent.\n     * @api\n     */\n    Static.prototype.getImageExtent = function () {\n        return this.imageExtent_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../Image.js\").default} Single image.\n     */\n    Static.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (intersects(extent, this.image_.getExtent())) {\n            return this.image_;\n        }\n        return null;\n    };\n    /**\n     * Return the URL used for this image source.\n     * @return {string} URL.\n     * @api\n     */\n    Static.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     */\n    Static.prototype.handleImageChange = function (evt) {\n        if (this.image_.getState() == ImageState.LOADED) {\n            var imageExtent = this.image_.getExtent();\n            var image = this.image_.getImage();\n            var imageWidth = void 0, imageHeight = void 0;\n            if (this.imageSize_) {\n                imageWidth = this.imageSize_[0];\n                imageHeight = this.imageSize_[1];\n            }\n            else {\n                imageWidth = image.width;\n                imageHeight = image.height;\n            }\n            var resolution = getHeight(imageExtent) / imageHeight;\n            var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n            if (targetWidth != imageWidth) {\n                var context = createCanvasContext2D(targetWidth, imageHeight);\n                assign(context, this.getContextOptions());\n                var canvas = context.canvas;\n                context.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, canvas.width, canvas.height);\n                this.image_.setImage(canvas);\n            }\n        }\n        _super.prototype.handleImageChange.call(this, evt);\n    };\n    return Static;\n}(ImageSource));\nexport default Static;\n//# sourceMappingURL=ImageStatic.js.map","/**\n * @module ol/OverlayPositioning\n */\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_CENTER: 'bottom-center',\n    BOTTOM_RIGHT: 'bottom-right',\n    CENTER_LEFT: 'center-left',\n    CENTER_CENTER: 'center-center',\n    CENTER_RIGHT: 'center-right',\n    TOP_LEFT: 'top-left',\n    TOP_CENTER: 'top-center',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=OverlayPositioning.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Overlay\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport { CLASS_SELECTABLE } from './css.js';\nimport { containsExtent } from './extent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { outerHeight, outerWidth, removeChildren, removeNode } from './dom.js';\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n    ELEMENT: 'element',\n    MAP: 'map',\n    OFFSET: 'offset',\n    POSITION: 'position',\n    POSITIONING: 'positioning',\n};\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /** @class */ (function (_super) {\n    __extends(Overlay, _super);\n    /**\n     * @param {Options} options Overlay options.\n     */\n    function Overlay(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {Options}\n         */\n        _this.options = options;\n        /**\n         * @protected\n         * @type {number|string|undefined}\n         */\n        _this.id = options.id;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.insertFirst =\n            options.insertFirst !== undefined ? options.insertFirst : true;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = document.createElement('div');\n        _this.element.className =\n            options.className !== undefined\n                ? options.className\n                : 'ol-overlay-container ' + CLASS_SELECTABLE;\n        _this.element.style.position = 'absolute';\n        _this.element.style.pointerEvents = 'auto';\n        var autoPan = options.autoPan;\n        if (autoPan && 'object' !== typeof autoPan) {\n            autoPan = {\n                animation: options.autoPanAnimation,\n                margin: options.autoPanMargin,\n            };\n        }\n        /**\n         * @protected\n         * @type {PanIntoViewOptions|false}\n         */\n        _this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n        /**\n         * @protected\n         * @type {{transform_: string,\n         *         visible: boolean}}\n         */\n        _this.rendered = {\n            transform_: '',\n            visible: true,\n        };\n        /**\n         * @protected\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.mapPostrenderListenerKey = null;\n        _this.addEventListener(getChangeEventType(Property.ELEMENT), _this.handleElementChanged);\n        _this.addEventListener(getChangeEventType(Property.MAP), _this.handleMapChanged);\n        _this.addEventListener(getChangeEventType(Property.OFFSET), _this.handleOffsetChanged);\n        _this.addEventListener(getChangeEventType(Property.POSITION), _this.handlePositionChanged);\n        _this.addEventListener(getChangeEventType(Property.POSITIONING), _this.handlePositioningChanged);\n        if (options.element !== undefined) {\n            _this.setElement(options.element);\n        }\n        _this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n        _this.setPositioning(options.positioning !== undefined\n            ? /** @type {import(\"./OverlayPositioning.js\").default} */ (options.positioning)\n            : OverlayPositioning.TOP_LEFT);\n        if (options.position !== undefined) {\n            _this.setPosition(options.position);\n        }\n        return _this;\n    }\n    /**\n     * Get the DOM element of this overlay.\n     * @return {HTMLElement|undefined} The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getElement = function () {\n        return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n    };\n    /**\n     * Get the overlay identifier which is set on constructor.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Overlay.prototype.getId = function () {\n        return this.id;\n    };\n    /**\n     * Get the map associated with this overlay.\n     * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getMap = function () {\n        return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP));\n    };\n    /**\n     * Get the offset of this overlay.\n     * @return {Array<number>} The offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getOffset = function () {\n        return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n    };\n    /**\n     * Get the current position of this overlay.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n     *     anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPosition = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION));\n    };\n    /**\n     * Get the current positioning of this overlay.\n     * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n     *     relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPositioning = function () {\n        return /** @type {import(\"./OverlayPositioning.js\").default} */ (this.get(Property.POSITIONING));\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleElementChanged = function () {\n        removeChildren(this.element);\n        var element = this.getElement();\n        if (element) {\n            this.element.appendChild(element);\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleMapChanged = function () {\n        if (this.mapPostrenderListenerKey) {\n            removeNode(this.element);\n            unlistenByKey(this.mapPostrenderListenerKey);\n            this.mapPostrenderListenerKey = null;\n        }\n        var map = this.getMap();\n        if (map) {\n            this.mapPostrenderListenerKey = listen(map, MapEventType.POSTRENDER, this.render, this);\n            this.updatePixelPosition();\n            var container = this.stopEvent\n                ? map.getOverlayContainerStopEvent()\n                : map.getOverlayContainer();\n            if (this.insertFirst) {\n                container.insertBefore(this.element, container.childNodes[0] || null);\n            }\n            else {\n                container.appendChild(this.element);\n            }\n            this.performAutoPan();\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.render = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleOffsetChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositionChanged = function () {\n        this.updatePixelPosition();\n        this.performAutoPan();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositioningChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * Set the DOM element to be associated with this overlay.\n     * @param {HTMLElement|undefined} element The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setElement = function (element) {\n        this.set(Property.ELEMENT, element);\n    };\n    /**\n     * Set the map to be associated with this overlay.\n     * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setMap = function (map) {\n        this.set(Property.MAP, map);\n    };\n    /**\n     * Set the offset for this overlay.\n     * @param {Array<number>} offset Offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setOffset = function (offset) {\n        this.set(Property.OFFSET, offset);\n    };\n    /**\n     * Set the position for this overlay. If the position is `undefined` the\n     * overlay is hidden.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n     *     is anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPosition = function (position) {\n        this.set(Property.POSITION, position);\n    };\n    /**\n     * Pan the map so that the overlay is entirely visisble in the current viewport\n     * (if necessary) using the configured autoPan parameters\n     * @protected\n     */\n    Overlay.prototype.performAutoPan = function () {\n        if (this.autoPan) {\n            this.panIntoView(this.autoPan);\n        }\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary).\n     * @param {PanIntoViewOptions=} opt_panIntoViewOptions Options for the pan action\n     * @api\n     */\n    Overlay.prototype.panIntoView = function (opt_panIntoViewOptions) {\n        var map = this.getMap();\n        if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n            return;\n        }\n        var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n        var element = this.getElement();\n        var overlayRect = this.getRect(element, [\n            outerWidth(element),\n            outerHeight(element),\n        ]);\n        var panIntoViewOptions = opt_panIntoViewOptions || {};\n        var myMargin = panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n        if (!containsExtent(mapRect, overlayRect)) {\n            // the overlay is not completely inside the viewport, so pan the map\n            var offsetLeft = overlayRect[0] - mapRect[0];\n            var offsetRight = mapRect[2] - overlayRect[2];\n            var offsetTop = overlayRect[1] - mapRect[1];\n            var offsetBottom = mapRect[3] - overlayRect[3];\n            var delta = [0, 0];\n            if (offsetLeft < 0) {\n                // move map to the left\n                delta[0] = offsetLeft - myMargin;\n            }\n            else if (offsetRight < 0) {\n                // move map to the right\n                delta[0] = Math.abs(offsetRight) + myMargin;\n            }\n            if (offsetTop < 0) {\n                // move map up\n                delta[1] = offsetTop - myMargin;\n            }\n            else if (offsetBottom < 0) {\n                // move map down\n                delta[1] = Math.abs(offsetBottom) + myMargin;\n            }\n            if (delta[0] !== 0 || delta[1] !== 0) {\n                var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map\n                    .getView()\n                    .getCenterInternal());\n                var centerPx = map.getPixelFromCoordinateInternal(center);\n                if (!centerPx) {\n                    return;\n                }\n                var newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n                var panOptions = panIntoViewOptions.animation || {};\n                map.getView().animateInternal({\n                    center: map.getCoordinateFromPixelInternal(newCenterPx),\n                    duration: panOptions.duration,\n                    easing: panOptions.easing,\n                });\n            }\n        }\n    };\n    /**\n     * Get the extent of an element relative to the document\n     * @param {HTMLElement} element The element.\n     * @param {import(\"./size.js\").Size} size The size of the element.\n     * @return {import(\"./extent.js\").Extent} The extent.\n     * @protected\n     */\n    Overlay.prototype.getRect = function (element, size) {\n        var box = element.getBoundingClientRect();\n        var offsetX = box.left + window.pageXOffset;\n        var offsetY = box.top + window.pageYOffset;\n        return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n    };\n    /**\n     * Set the positioning for this overlay.\n     * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n     *     positioned relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPositioning = function (positioning) {\n        this.set(Property.POSITIONING, positioning);\n    };\n    /**\n     * Modify the visibility of the element.\n     * @param {boolean} visible Element visibility.\n     * @protected\n     */\n    Overlay.prototype.setVisible = function (visible) {\n        if (this.rendered.visible !== visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.rendered.visible = visible;\n        }\n    };\n    /**\n     * Update pixel position.\n     * @protected\n     */\n    Overlay.prototype.updatePixelPosition = function () {\n        var map = this.getMap();\n        var position = this.getPosition();\n        if (!map || !map.isRendered() || !position) {\n            this.setVisible(false);\n            return;\n        }\n        var pixel = map.getPixelFromCoordinate(position);\n        var mapSize = map.getSize();\n        this.updateRenderedPosition(pixel, mapSize);\n    };\n    /**\n     * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n     * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n     * @protected\n     */\n    Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\n        var style = this.element.style;\n        var offset = this.getOffset();\n        var positioning = this.getPositioning();\n        this.setVisible(true);\n        var x = Math.round(pixel[0] + offset[0]) + 'px';\n        var y = Math.round(pixel[1] + offset[1]) + 'px';\n        var posX = '0%';\n        var posY = '0%';\n        if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n            positioning == OverlayPositioning.CENTER_RIGHT ||\n            positioning == OverlayPositioning.TOP_RIGHT) {\n            posX = '-100%';\n        }\n        else if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.CENTER_CENTER ||\n            positioning == OverlayPositioning.TOP_CENTER) {\n            posX = '-50%';\n        }\n        if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n            positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.BOTTOM_RIGHT) {\n            posY = '-100%';\n        }\n        else if (positioning == OverlayPositioning.CENTER_LEFT ||\n            positioning == OverlayPositioning.CENTER_CENTER ||\n            positioning == OverlayPositioning.CENTER_RIGHT) {\n            posY = '-50%';\n        }\n        var transform = \"translate(\" + posX + \", \" + posY + \") translate(\" + x + \", \" + y + \")\";\n        if (this.rendered.transform_ != transform) {\n            this.rendered.transform_ = transform;\n            style.transform = transform;\n            // @ts-ignore IE9\n            style.msTransform = transform;\n        }\n    };\n    /**\n     * returns the options this Overlay has been created with\n     * @return {Options} overlay options\n     */\n    Overlay.prototype.getOptions = function () {\n        return this.options;\n    };\n    return Overlay;\n}(BaseObject));\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport EventType from './events/EventType.js';\nimport { assert } from './asserts.js';\nimport { listen, unlistenByKey } from './events.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        _this.addEventListener(getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_);\n        if (opt_geometryOrProperties) {\n            if (typeof (\n            /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry) === 'function') {\n                var geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.hasProperties() ? this.getProperties() : null);\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {Geometry|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {Geometry|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature to override the layer style.  This can be a\n     * single style object, an array of styles, or a function that takes a\n     * resolution and returns an array of styles. To unset the feature style, call\n     * `setStyle()` without arguments or a falsey value.\n     * @param {import(\"./style/Style.js\").StyleLike=} opt_style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style;\n        this.styleFunction_ = !opt_style\n            ? undefined\n            : createStyleFunction(opt_style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~BaseEvent#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.geometryName_ = name;\n        this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof ( /** @type {?} */(obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Anchor is a fraction\n     * @api\n     */\n    FRACTION: 'fraction',\n    /**\n     * Anchor is in pixels\n     * @api\n     */\n    PIXELS: 'pixels',\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    /**\n     * Origin is at bottom left\n     * @api\n     */\n    BOTTOM_LEFT: 'bottom-left',\n    /**\n     * Origin is at bottom right\n     * @api\n     */\n    BOTTOM_RIGHT: 'bottom-right',\n    /**\n     * Origin is at top left\n     * @api\n     */\n    TOP_LEFT: 'top-left',\n    /**\n     * Origin is at top right\n     * @api\n     */\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { asString } from '../color.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar taintedTestContext = null;\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {Object<number, HTMLCanvasElement>}\n         */\n        _this.canvas_ = {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            if (!taintedTestContext) {\n                taintedTestContext = createCanvasContext2D(1, 1);\n            }\n            taintedTestContext.drawImage(this.image_, 0, 0);\n            try {\n                taintedTestContext.getImageData(0, 0, 1, 1);\n                this.tainted_ = false;\n            }\n            catch (e) {\n                taintedTestContext = null;\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        else {\n            this.size_ = [this.image_.width, this.image_.height];\n        }\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Image or Canvas element.\n     */\n    IconImage.prototype.getPixelRatio = function (pixelRatio) {\n        this.replaceColor_(pixelRatio);\n        return this.canvas_[pixelRatio] ? pixelRatio : 1;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function () {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function (pixelRatio) {\n        if (!this.color_ || this.canvas_[pixelRatio]) {\n            return;\n        }\n        var canvas = document.createElement('canvas');\n        this.canvas_[pixelRatio] = canvas;\n        canvas.width = Math.ceil(this.image_.width * pixelRatio);\n        canvas.height = Math.ceil(this.image_.height * pixelRatio);\n        var ctx = canvas.getContext('2d');\n        ctx.scale(pixelRatio, pixelRatio);\n        ctx.drawImage(this.image_, 0, 0);\n        ctx.globalCompositeOperation = 'multiply';\n        // Internet Explorer 11 does not support the multiply operation.\n        // If the canvas is tainted in Internet Explorer this still produces\n        // a solid color image with the shape of the icon.\n        if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n            ctx.fillStyle = asString(this.color_);\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            ctx.globalCompositeOperation = 'destination-in';\n            ctx.drawImage(this.image_, 0, 0);\n        }\n        else {\n            var imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n            var data = imgData.data;\n            var r = this.color_[0] / 255.0;\n            var g = this.color_[1] / 255.0;\n            var b = this.color_[2] / 255.0;\n            var a = this.color_[3];\n            for (var i = 0, ii = data.length; i < ii; i += 4) {\n                data[i] *= r;\n                data[i + 1] *= g;\n                data[i + 2] *= b;\n                data[i + 3] *= a;\n            }\n            ctx.putImageData(imgData, 0, 0);\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport { asArray } from '../color.js';\nimport { assert } from '../asserts.js';\nimport { get as getIconImage } from './IconImage.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ? options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            displacement: options.displacement !== undefined ? options.displacement : [0, 0],\n            rotateWithView: rotateWithView,\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ =\n            options.anchorOrigin !== undefined\n                ? options.anchorOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ =\n            options.anchorXUnits !== undefined\n                ? options.anchorXUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ =\n            options.anchorYUnits !== undefined\n                ? options.anchorYUnits\n                : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, \n        /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ =\n            options.offsetOrigin !== undefined\n                ? options.offsetOrigin\n                : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: this.color_ && this.color_.slice\n                ? this.color_.slice()\n                : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n        });\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @return {Array<number>} Anchor.\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * Get the pixel ratio.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} The pixel ration of the image.\n     * @api\n     */\n    Icon.prototype.getPixelRatio = function (pixelRatio) {\n        return this.iconImage_.getPixelRatio(pixelRatio);\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    Icon.prototype.getHitDetectionImage = function () {\n        return this.iconImage_.getHitDetectionImage();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @return {Array<number>} Origin.\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        var displacement = this.getDisplacement();\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        offset[0] += displacement[0];\n        offset[1] += displacement[1];\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * Get the size of the icon (in pixels).\n     * @return {import(\"../size.js\").Size} Image size.\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.listenImageChange = function (listener) {\n        this.iconImage_.addEventListener(EventType.CHANGE, listener);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n     */\n    Icon.prototype.unlistenImageChange = function (listener) {\n        this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line',\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding(),\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value,\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value,\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature',\n    /**\n     * Triggered when features starts loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n     * @api\n     */\n    FEATURESLOADSTART: 'featuresloadstart',\n    /**\n     * Triggered when features finishes loading.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n     * @api\n     */\n    FEATURESLOADEND: 'featuresloadend',\n    /**\n     * Triggered if feature loading results in an error.\n     * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n     * @api\n     */\n    FEATURESLOADERROR: 'featuresloaderror',\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml',\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport { VOID } from './functions.js';\n/**\n *\n * @type {boolean}\n * @private\n */\nvar withCredentials = false;\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection and success and failure callbacks as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(url, format, extent, resolution, projection, success, failure) {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n    if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n    }\n    xhr.withCredentials = withCredentials;\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    xhr.onload = function (event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n            var type = format.getType();\n            /** @type {Document|Node|Object|string|undefined} */\n            var source = void 0;\n            if (type == FormatType.JSON || type == FormatType.TEXT) {\n                source = xhr.responseText;\n            }\n            else if (type == FormatType.XML) {\n                source = xhr.responseXML;\n                if (!source) {\n                    source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                }\n            }\n            else if (type == FormatType.ARRAY_BUFFER) {\n                source = /** @type {ArrayBuffer} */ (xhr.response);\n            }\n            if (source) {\n                success(\n                /** @type {Array<import(\"./Feature.js\").default>} */\n                (format.readFeatures(source, {\n                    extent: extent,\n                    featureProjection: projection,\n                })), format.readProjection(source));\n            }\n            else {\n                failure();\n            }\n        }\n        else {\n            failure();\n        }\n    };\n    /**\n     * @private\n     */\n    xhr.onerror = failure;\n    xhr.send();\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @param {function(): void=} success Success\n     *      Function called when loading succeeded.\n     * @param {function(): void=} failure Failure\n     *      Function called when loading failed.\n     * @this {import(\"./source/Vector\").default}\n     */\n    return function (extent, resolution, projection, success, failure) {\n        var source = /** @type {import(\"./source/Vector\").default} */ (this);\n        loadFeaturesXhr(url, format, extent, resolution, projection, \n        /**\n         * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n         * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n         * projection.\n         */\n        function (features, dataProjection) {\n            if (success !== undefined) {\n                success(features);\n            }\n            source.addFeatures(features);\n        }, \n        /* FIXME handle error */ failure ? failure : VOID);\n    };\n}\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n    withCredentials = xhrWithCredentials;\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { extend } from '../array.js';\nimport { getUid } from '../util.js';\nimport { getValues, isEmpty } from '../obj.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { xhr } from '../featureloader.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>=} opt_features Features.\n     */\n    function VectorSourceEvent(type, opt_feature, opt_features) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n         * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        /**\n         * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n         * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, \n            /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ =\n            options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features by uid (using getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.uidIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * Note: this also applies if an {@link module:ol/Collection} is used for features,\n     * meaning that if a feature with a duplicate id is added in the collection, it will\n     * be removed from it right away.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            if (this.featuresCollection_) {\n                this.featuresCollection_.remove(feature);\n            }\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this),\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        if (valid) {\n            assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n            this.uidIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        this.addEventListener(VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        this.addEventListener(VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent<Geometry>} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        collection.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        collection.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(\n                /** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }.bind(this));\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.uidIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features);\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * When `useSpatialIndex` is set to false, this method will return all\n     * features.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.getInExtent(extent);\n        }\n        else if (this.featuresCollection_) {\n            return this.featuresCollection_.getArray();\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get a feature by its internal unique identifier (using `getUid`).\n     *\n     * @param {string} uid Feature identifier.\n     * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n     */\n    VectorSource.prototype.getFeatureByUid = function (uid) {\n        var feature = this.uidIndex_[uid];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (this.idIndex_[sid] !== feature) {\n                this.removeFromIdIndex_(feature);\n                this.idIndex_[sid] = feature;\n            }\n        }\n        else {\n            this.removeFromIdIndex_(feature);\n            this.uidIndex_[featureKey] = feature;\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.uidIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADSTART));\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection, function (features) {\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADEND, undefined, features));\n                }.bind(this_1), function () {\n                    this.dispatchEvent(new VectorSourceEvent(VectorEventType.FEATURESLOADERROR));\n                }.bind(this_1));\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        delete this.uidIndex_[featureKey];\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction, } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder',\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ =\n            options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ =\n            options.renderBuffer !== undefined ? options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ =\n            options.updateWhileAnimating !== undefined\n                ? options.updateWhileAnimating\n                : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ =\n            options.updateWhileInteracting !== undefined\n                ? options.updateWhileInteracting\n                : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n     * that resolves with an array of features. The array will either contain the topmost feature\n     * when a hit was detected, or it will be empty.\n     *\n     * The hit detection algorithm used for this method is optimized for performance, but is less\n     * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n     * is not considered, and icons are only represented by their bounding box instead of the exact\n     * image.\n     *\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n     * @api\n     */\n    BaseVectorLayer.prototype.getFeatures = function (pixel) {\n        return _super.prototype.getFeatures.call(this, pixel);\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    BaseVectorLayer.prototype.renderDeclutter = function (frameState) {\n        if (!frameState.declutterTree) {\n            frameState.declutterTree = new RBush(9);\n        }\n        /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If set to `null`, the layer has no style (a `null` style),\n     * so only features that have their own styles will be rendered in the layer. Call\n     * `setStyle()` without arguments to reset to the default style. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {(import(\"../style/Style.js\").StyleLike|null)=} opt_style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (opt_style) {\n        this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n        this.styleFunction_ =\n            opt_style === null ? undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12,\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with a text style.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterImageWithText) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"../render/canvas.js\").DeclutterImageWithText=} opt_declutterImageWithText Shared data for combined decluttering with an image style.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterImageWithText) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, containsCoordinate, coordinateRelationship, } from '../../extent.js';\nimport { defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, } from '../canvas.js';\nimport { equals, reverseSubArray } from '../../array.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray, } from '../../geom/flat/inflate.js';\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1\n            ? dashArray\n            : dashArray.map(function (dash) {\n                return dash * pixelRatio;\n            });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} stride Stride.\n     * @protected\n     * @return {number} My end\n     */\n    CanvasBuilder.prototype.appendFlatPointCoordinates = function (flatCoordinates, stride) {\n        var extent = this.getBufferedMaxExtent();\n        var tmpCoord = this.tmpCoordinate_;\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            tmpCoord[0] = flatCoordinates[i];\n            tmpCoord[1] = flatCoordinates[i + 1];\n            if (containsCoordinate(extent, tmpCoord)) {\n                coordinates[myEnd++] = tmpCoord[0];\n                coordinates[myEnd++] = tmpCoord[1];\n            }\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatLineCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var coordinates = this.coordinates;\n        var myEnd = coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    coordinates[myEnd++] = lastXCoord;\n                    coordinates[myEnd++] = lastYCoord;\n                    skipped = false;\n                }\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                coordinates[myEnd++] = nextCoord[0];\n                coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            coordinates[myEnd++] = lastXCoord;\n            coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(geometry, feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            flatCoordinates = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEndss,\n                geometry,\n                renderer,\n                inflateMultiCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.POLYGON ||\n            type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates =\n                type == GeometryType.POLYGON\n                    ? /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates()\n                    : geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnds,\n                geometry,\n                renderer,\n                inflateCoordinatesArray,\n            ]);\n        }\n        else if (type == GeometryType.LINE_STRING ||\n            type == GeometryType.CIRCLE) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n                inflateCoordinates,\n            ]);\n        }\n        else if (type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (builderEnd > builderBegin) {\n                this.instructions.push([\n                    CanvasInstruction.CUSTOM,\n                    builderBegin,\n                    builderEnd,\n                    geometry,\n                    renderer,\n                    inflateCoordinates,\n                ]);\n            }\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([\n                CanvasInstruction.CUSTOM,\n                builderBegin,\n                builderEnd,\n                geometry,\n                renderer,\n            ]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (geometry, feature) {\n        this.beginGeometryInstruction1_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [\n            CanvasInstruction.BEGIN_GEOMETRY,\n            feature,\n            0,\n            geometry,\n        ];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates,\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap =\n                strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash\n                ? strokeStyleLineDash.slice()\n                : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset\n                ? strokeStyleLineDashOffset\n                : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin =\n                strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth =\n                strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit =\n                strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth * this.pixelRatio,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            this.applyPixelRatio(state.lineDash),\n            state.lineDashOffset * this.pixelRatio,\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash &&\n                !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.imagePixelRatio_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        /**\n         * Data shared with a text builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(pointGeometry, feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(multiPointGeometry, feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_ * this.imagePixelRatio_,\n            this.anchorY_ * this.imagePixelRatio_,\n            Math.ceil(this.height_ * this.imagePixelRatio_),\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            [\n                (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n                (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n            ],\n            Math.ceil(this.width_ * this.imagePixelRatio_),\n            this.declutterImageWithText_,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE,\n            myBegin,\n            myEnd,\n            this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_,\n            this.anchorY_,\n            this.height_,\n            this.opacity_,\n            this.originX_,\n            this.originY_,\n            this.rotateWithView_,\n            this.rotation_,\n            this.scale_,\n            this.width_,\n            this.declutterImageWithText_,\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.imagePixelRatio_ = undefined;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @param {Object=} opt_sharedData Shared data.\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, opt_sharedData) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage();\n        var image = imageStyle.getImage(this.pixelRatio);\n        var origin = imageStyle.getOrigin();\n        this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScaleArray();\n        this.width_ = size[0];\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, strokeInstruction, } from './Instruction.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [\n            CanvasInstruction.MOVE_TO_LINE_TO,\n            myBegin,\n            myEnd,\n        ];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(lineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(multiLineStringGeometry, feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle,\n            state.lineWidth,\n            state.lineCap,\n            state.lineJoin,\n            state.miterLimit,\n            state.lineDash,\n            state.lineDashOffset,\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, \n            /** @type {number} */ (ends[i]), stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined &&\n            state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, { beginPathInstruction, closePathInstruction, fillInstruction, strokeInstruction, } from './Instruction.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport { snap } from '../../geom/flat/simplify.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle !== undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatLineCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [\n                CanvasInstruction.MOVE_TO_LINE_TO,\n                myBegin,\n                myEnd,\n            ];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(circleGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatLineCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(polygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, \n        /** @type {Array<number>} */ (ends), stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(multiPolygonGeometry, feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle,\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle,\n                state.lineWidth,\n                state.lineCap,\n                state.lineJoin,\n                state.miterLimit,\n                state.lineDash,\n                state.lineDashOffset,\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultPadding, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, registerFont, } from '../canvas.js';\nimport { getUid } from '../../util.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {\n    'left': 0,\n    'end': 0,\n    'center': 0.5,\n    'right': 1,\n    'start': 1,\n    'top': 0,\n    'middle': 0.5,\n    'hanging': 0.2,\n    'alphabetic': 0.8,\n    'ideographic': 0.8,\n    'bottom': 1,\n};\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        /**\n         * Data shared with an image builder for combined decluttering.\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterImageWithText}\n         */\n        _this.declutterImageWithText_ = undefined;\n        return _this;\n    }\n    /**\n     * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var coordinates = this.coordinates;\n        var begin = coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var stride = geometry.getStride();\n        if (textState.placement === TextPlacement.LINE &&\n            (geometryType == GeometryType.LINE_STRING ||\n                geometryType == GeometryType.MULTI_LINE_STRING ||\n                geometryType == GeometryType.POLYGON ||\n                geometryType == GeometryType.MULTI_POLYGON)) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n                    .getEnds()\n                    .slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getEndss();\n                ends = [];\n                for (var i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (var i = flatOffset; i < flatEnd; i += stride) {\n                    coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                var end = coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = textState.overflow ? null : [];\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry).getFlatCoordinates();\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    stride = 2;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (var i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    if (flatCoordinates.length === 0) {\n                        return;\n                    }\n                    stride = 2;\n                    break;\n                default:\n            }\n            var end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n            if (end === begin) {\n                return;\n            }\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(geometry, feature);\n            // adjust padding for negative scale\n            var padding = textState.padding;\n            if (padding != defaultPadding &&\n                (textState.scale[0] < 0 || textState.scale[1] < 0)) {\n                var p0 = textState.padding[0];\n                var p1 = textState.padding[1];\n                var p2 = textState.padding[2];\n                var p3 = textState.padding[3];\n                if (textState.scale[0] < 0) {\n                    p1 = -p1;\n                    p3 = -p3;\n                }\n                if (textState.scale[1] < 0) {\n                    p0 = -p0;\n                    p2 = -p2;\n                }\n                padding = [p0, p1, p2, p3];\n            }\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [1, 1],\n                NaN,\n                this.declutterImageWithText_,\n                padding == defaultPadding\n                    ? defaultPadding\n                    : padding.map(function (p) {\n                        return p * pixelRatio_1;\n                    }),\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            var scale = 1 / pixelRatio_1;\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.DRAW_IMAGE,\n                begin,\n                end,\n                null,\n                NaN,\n                NaN,\n                NaN,\n                1,\n                0,\n                0,\n                this.textRotateWithView_,\n                this.textRotation_,\n                [scale, scale],\n                NaN,\n                this.declutterImageWithText_,\n                padding,\n                !!textState.backgroundFill,\n                !!textState.backgroundStroke,\n                this.text_,\n                this.textKey_,\n                this.strokeKey_,\n                this.fillKey_,\n                this.textOffsetX_,\n                this.textOffsetY_,\n                geometryWidths,\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash,\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale,\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle,\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var strokeWidth = strokeState\n            ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n            : 0;\n        this.instructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            pixelRatio,\n            offsetY,\n            strokeKey,\n            strokeWidth * pixelRatio,\n            text,\n            textKey,\n            1,\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_CHARS,\n            begin,\n            end,\n            baseline,\n            textState.overflow,\n            fillKey,\n            textState.maxAngle,\n            1,\n            offsetY,\n            strokeKey,\n            strokeWidth,\n            text,\n            textKey,\n            1 / pixelRatio,\n        ]);\n    };\n    /**\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @param {Object=} opt_sharedData Shared data.\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, opt_sharedData) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = null;\n                this.textFillState_ = fillState;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                    this.textFillState_ = fillState;\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = null;\n                this.textStrokeState_ = strokeState;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                    this.textStrokeState_ = strokeState;\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            registerFont(font);\n            var textScale = textStyle.getScaleArray();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline =\n                textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? [1, 1] : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ =\n                textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState\n                ? (typeof strokeState.strokeStyle == 'string'\n                    ? strokeState.strokeStyle\n                    : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap +\n                    strokeState.lineDashOffset +\n                    '|' +\n                    strokeState.lineWidth +\n                    strokeState.lineJoin +\n                    strokeState.miterLimit +\n                    '[' +\n                    strokeState.lineDash.join() +\n                    ']'\n                : '';\n            this.textKey_ =\n                textState.font +\n                    textState.scale +\n                    (textState.textAlign || '?') +\n                    (textState.textBaseline || '?');\n            this.fillKey_ = fillState\n                ? typeof fillState.fillStyle == 'string'\n                    ? fillState.fillStyle\n                    : '|' + getUid(fillState.fillStyle)\n                : '';\n        }\n        this.declutterImageWithText_ = opt_sharedData;\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder,\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text',\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\nimport { rotate } from './transform.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache, rotation) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var x1 = 0;\n    var y1 = 0;\n    var segmentLength = 0;\n    var segmentM = 0;\n    function advance() {\n        x1 = x2;\n        y1 = y2;\n        offset += stride;\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        segmentM += segmentLength;\n        segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    }\n    do {\n        advance();\n    } while (offset < end - stride && segmentM + segmentLength < startM);\n    var interpolate = (startM - segmentM) / segmentLength;\n    var beginX = lerp(x1, x2, interpolate);\n    var beginY = lerp(y1, y2, interpolate);\n    var startOffset = offset - stride;\n    var startLength = segmentM;\n    var endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n    while (offset < end - stride && segmentM + segmentLength < endM) {\n        advance();\n    }\n    interpolate = (endM - segmentM) / segmentLength;\n    var endX = lerp(x1, x2, interpolate);\n    var endY = lerp(y1, y2, interpolate);\n    // Keep text upright\n    var reverse;\n    if (rotation) {\n        var flat = [beginX, beginY, endX, endY];\n        rotate(flat, 0, 4, 2, rotation, flat, flat);\n        reverse = flat[0] > flat[2];\n    }\n    else {\n        reverse = beginX > endX;\n    }\n    var PI = Math.PI;\n    var result = [];\n    var singleSegment = startOffset + stride === offset;\n    offset = startOffset;\n    segmentLength = 0;\n    segmentM = startLength;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    // All on the same segment\n    if (singleSegment) {\n        advance();\n        var previousAngle_1 = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            previousAngle_1 += previousAngle_1 > 0 ? -PI : PI;\n        }\n        var x = (endX + beginX) / 2;\n        var y = (endY + beginY) / 2;\n        result[0] = [x, y, (endM - startM) / 2, previousAngle_1, text];\n        return result;\n    }\n    var previousAngle;\n    for (var i = 0, ii = text.length; i < ii;) {\n        advance();\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -PI : PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var iStart = i;\n        var charLength = 0;\n        for (; i < ii; ++i) {\n            var index = reverse ? ii - i - 1 : i;\n            var len = scale * measureAndCacheTextWidth(font, text[index], cache);\n            if (offset + stride < end &&\n                segmentM + segmentLength < startM + charLength + len / 2) {\n                break;\n            }\n            charLength += len;\n        }\n        if (i === iStart) {\n            continue;\n        }\n        var chars = reverse\n            ? text.substring(ii - iStart, ii - i)\n            : text.substring(iStart, i);\n        interpolate = (startM + charLength / 2 - segmentM) / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result.push([x, y, charLength / 2, angle, chars]);\n        startM += charLength;\n    }\n    return result;\n}\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../../has.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, setFromArray as transformSetFromArray, } from '../../transform.js';\nimport { createEmpty, createOrUpdate, intersects } from '../../extent.js';\nimport { defaultPadding, defaultTextBaseline, drawImageOrLabel, } from '../canvas.js';\nimport { defaultTextAlign, measureAndCacheTextWidth, measureTextHeight, measureTextWidths, } from '../canvas.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { equals } from '../../array.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @typedef {Object} BBox\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {*} value\n */\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX\n * @property {number} drawImageY\n * @property {number} drawImageW\n * @property {number} drawImageH\n * @property {number} originX\n * @property {number} originY\n * @property {Array<number>} scale\n * @property {BBox} declutterBox\n * @property {import(\"../../transform.js\").Transform} canvasTransform\n */\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n    return replayImageOrLabelArgs[3].declutterBox;\n}\nvar rtlRegEx = new RegExp(\n/* eslint-disable prettier/prettier */\n'[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n    ']'\n/* eslint-enable prettier/prettier */\n);\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n    if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n        align = align === 'start' ? 'left' : 'right';\n    }\n    return TEXT_ALIGN[align];\n}\nvar Executor = /** @class */ (function () {\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n     * @param {import(\"../../size.js\").Size} renderBuffer Render buffer (width/height) in pixels.\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions, renderBuffer) {\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.alignFill_;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        this.renderBuffer_ = renderBuffer;\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        this.widths_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../canvas.js\").Label>}\n         */\n        this.labels_ = {};\n    }\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {import(\"../canvas.js\").Label} Label.\n     */\n    Executor.prototype.createLabel = function (text, textKey, fillKey, strokeKey) {\n        var key = text + textKey + fillKey + strokeKey;\n        if (this.labels_[key]) {\n            return this.labels_[key];\n        }\n        var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n        var fillState = fillKey ? this.fillStates[fillKey] : null;\n        var textState = this.textStates[textKey];\n        var pixelRatio = this.pixelRatio;\n        var scale = [\n            textState.scale[0] * pixelRatio,\n            textState.scale[1] * pixelRatio,\n        ];\n        var align = horizontalTextAlign(text, textState.textAlign || defaultTextAlign);\n        var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        var lines = text.split('\\n');\n        var numLines = lines.length;\n        var widths = [];\n        var width = measureTextWidths(textState.font, lines, widths);\n        var lineHeight = measureTextHeight(textState.font);\n        var height = lineHeight * numLines;\n        var renderWidth = width + strokeWidth;\n        var contextInstructions = [];\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        var w = (renderWidth + 2) * scale[0];\n        var h = (height + strokeWidth) * scale[1];\n        /** @type {import(\"../canvas.js\").Label} */\n        var label = {\n            width: w < 0 ? Math.floor(w) : Math.ceil(w),\n            height: h < 0 ? Math.floor(h) : Math.ceil(h),\n            contextInstructions: contextInstructions,\n        };\n        if (scale[0] != 1 || scale[1] != 1) {\n            contextInstructions.push('scale', scale);\n        }\n        contextInstructions.push('font', textState.font);\n        if (strokeKey) {\n            contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n            contextInstructions.push('lineWidth', strokeWidth);\n            contextInstructions.push('lineCap', strokeState.lineCap);\n            contextInstructions.push('lineJoin', strokeState.lineJoin);\n            contextInstructions.push('miterLimit', strokeState.miterLimit);\n            // eslint-disable-next-line\n            var Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n            if (Context.prototype.setLineDash) {\n                contextInstructions.push('setLineDash', [strokeState.lineDash]);\n                contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n            }\n        }\n        if (fillKey) {\n            contextInstructions.push('fillStyle', fillState.fillStyle);\n        }\n        contextInstructions.push('textBaseline', 'middle');\n        contextInstructions.push('textAlign', 'center');\n        var leftRight = 0.5 - align;\n        var x = align * renderWidth + leftRight * strokeWidth;\n        var i;\n        if (strokeKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('strokeText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        if (fillKey) {\n            for (i = 0; i < numLines; ++i) {\n                contextInstructions.push('fillText', [\n                    lines[i],\n                    x + leftRight * widths[i],\n                    0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n                ]);\n            }\n        }\n        this.labels_[key] = label;\n        return label;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, \n            /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @private\n     * @param {number} sheetWidth Width of the sprite sheet.\n     * @param {number} sheetHeight Height of the sprite sheet.\n     * @param {number} centerX X.\n     * @param {number} centerY Y.\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {import(\"../../size.js\").Size} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {Array<number>} padding Padding.\n     * @param {boolean} fillStroke Background fill or stroke.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n     */\n    Executor.prototype.calculateImageOrLabelDimensions_ = function (sheetWidth, sheetHeight, centerX, centerY, width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, fillStroke, feature) {\n        anchorX *= scale[0];\n        anchorY *= scale[1];\n        var x = centerX - anchorX;\n        var y = centerY - anchorY;\n        var w = width + originX > sheetWidth ? sheetWidth - originX : width;\n        var h = height + originY > sheetHeight ? sheetHeight - originY : height;\n        var boxW = padding[3] + w * scale[0] + padding[1];\n        var boxH = padding[0] + h * scale[1] + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = boxX;\n            p4[0] = boxX;\n            p1[1] = boxY;\n            p2[1] = boxY;\n            p2[0] = boxX + boxW;\n            p3[0] = p2[0];\n            p3[1] = boxY + boxH;\n            p4[1] = p3[1];\n        }\n        var transform;\n        if (rotation !== 0) {\n            transform = composeTransform(createTransform(), centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(transform, p1);\n            applyTransform(transform, p2);\n            applyTransform(transform, p3);\n            applyTransform(transform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(Math.min(boxX, boxX + boxW), Math.min(boxY, boxY + boxH), Math.max(boxX, boxX + boxW), Math.max(boxY, boxY + boxH), tmpExtent);\n        }\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        return {\n            drawImageX: x,\n            drawImageY: y,\n            drawImageW: w,\n            drawImageH: h,\n            originX: originX,\n            originY: originY,\n            declutterBox: {\n                minX: tmpExtent[0],\n                minY: tmpExtent[1],\n                maxX: tmpExtent[2],\n                maxY: tmpExtent[3],\n                value: feature,\n            },\n            canvasTransform: transform,\n            scale: scale,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n     * @param {ImageOrLabelDimensions} dimensions Dimensions.\n     * @param {number} opacity Opacity.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     * @return {boolean} The image or label was rendered.\n     */\n    Executor.prototype.replayImageOrLabel_ = function (context, contextScale, imageOrLabel, dimensions, opacity, fillInstruction, strokeInstruction) {\n        var fillStroke = !!(fillInstruction || strokeInstruction);\n        var box = dimensions.declutterBox;\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction\n            ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n            : 0;\n        var intersects = box.minX - strokePadding <= canvas.width / contextScale &&\n            box.maxX + strokePadding >= 0 &&\n            box.minY - strokePadding <= canvas.height / contextScale &&\n            box.maxY + strokePadding >= 0;\n        if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImageOrLabel(context, dimensions.canvasTransform, opacity, imageOrLabel, dimensions.originX, dimensions.originY, dimensions.drawImageW, dimensions.drawImageH, dimensions.drawImageX, dimensions.drawImageY, dimensions.scale);\n        }\n        return true;\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context['strokeStyle'] = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawLabelWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.createLabel(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = horizontalTextAlign(text, textState.textAlign || defaultTextAlign);\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in createLabel() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale[0];\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = (baseline * label.height) / pixelRatio +\n            2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY,\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n     *     features that intersect this extent.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, contextScale, transform, instructions, snapToPixel, opt_featureCallback, opt_hitExtent, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, image, text, textKey, strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation,\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y, currentGeometry;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    currentGeometry = instruction[3];\n                    if (!feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined &&\n                        !intersects(opt_hitExtent, currentGeometry.getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = NaN;\n                        prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    var height = /** @type {number} */ (instruction[6]);\n                    var opacity = /** @type {number} */ (instruction[7]);\n                    var originX = /** @type {number} */ (instruction[8]);\n                    var originY = /** @type {number} */ (instruction[9]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[10]);\n                    var rotation = /** @type {number} */ (instruction[11]);\n                    var scale = /** @type {import(\"../../size.js\").Size} */ (instruction[12]);\n                    var width = /** @type {number} */ (instruction[13]);\n                    var declutterImageWithText = /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = labelWithAnchor.label;\n                        instruction[3] = image;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        instruction[4] = anchorX;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        instruction[5] = anchorY;\n                        height = image.height;\n                        instruction[6] = height;\n                        width = image.width;\n                        instruction[13] = width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = false;\n                        backgroundStroke = false;\n                    }\n                    if (rotateWithView && viewRotationFromTransform) {\n                        // Canvas is expected to be rotated to reverse view rotation.\n                        rotation += viewRotation;\n                    }\n                    else if (!rotateWithView && !viewRotationFromTransform) {\n                        // Canvas is not rotated, images need to be rotated back to be north-up.\n                        rotation -= viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths &&\n                            geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        var dimensions = this.calculateImageOrLabelDimensions_(image.width, image.height, pixelCoordinates[d], pixelCoordinates[d + 1], width, height, anchorX, anchorY, originX, originY, rotation, scale, snapToPixel, padding, backgroundFill || backgroundStroke, feature);\n                        /** @type {ReplayImageOrLabelArgs} */\n                        var args = [\n                            context,\n                            contextScale,\n                            image,\n                            dimensions,\n                            opacity,\n                            backgroundFill\n                                ? /** @type {Array<*>} */ (lastFillInstruction)\n                                : null,\n                            backgroundStroke\n                                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                                : null,\n                        ];\n                        var imageArgs = void 0;\n                        var imageDeclutterBox = void 0;\n                        if (opt_declutterTree && declutterImageWithText) {\n                            if (!declutterImageWithText[d]) {\n                                // We now have the image for an image+text combination.\n                                declutterImageWithText[d] = args;\n                                // Don't render anything for now, wait for the text.\n                                continue;\n                            }\n                            imageArgs = declutterImageWithText[d];\n                            delete declutterImageWithText[d];\n                            imageDeclutterBox = getDeclutterBox(imageArgs);\n                            if (opt_declutterTree.collides(imageDeclutterBox)) {\n                                continue;\n                            }\n                        }\n                        if (opt_declutterTree &&\n                            opt_declutterTree.collides(dimensions.declutterBox)) {\n                            continue;\n                        }\n                        if (imageArgs) {\n                            // We now have image and text for an image+text combination.\n                            if (opt_declutterTree) {\n                                opt_declutterTree.insert(imageDeclutterBox);\n                            }\n                            // Render the image before we render the text.\n                            this.replayImageOrLabel_.apply(this, imageArgs);\n                        }\n                        if (opt_declutterTree) {\n                            opt_declutterTree.insert(dimensions.declutterBox);\n                        }\n                        this.replayImageOrLabel_.apply(this, args);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    var overflow = /** @type {number} */ (instruction[4]);\n                    fillKey = /** @type {string} */ (instruction[5]);\n                    var maxAngle = /** @type {number} */ (instruction[6]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[7]);\n                    var offsetY = /** @type {number} */ (instruction[8]);\n                    strokeKey = /** @type {string} */ (instruction[9]);\n                    var strokeWidth = /** @type {number} */ (instruction[10]);\n                    text = /** @type {string} */ (instruction[11]);\n                    textKey = /** @type {string} */ (instruction[12]);\n                    var pixelRatioScale = [\n                        /** @type {number} */ (instruction[13]),\n                        /** @type {number} */ (instruction[13]),\n                    ];\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = [\n                        textState.scale[0] * measurePixelRatio,\n                        textState.scale[1] * measurePixelRatio,\n                    ];\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = {};\n                        this.widths_[font] = cachedWidths;\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = Math.abs(textScale[0]) *\n                        measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, Math.abs(textScale[0]), measureAndCacheTextWidth, font, cachedWidths, viewRotationFromTransform ? 0 : this.viewRotation_);\n                        drawChars: if (parts) {\n                            /** @type {Array<ReplayImageOrLabelArgs>} */\n                            var replayImageOrLabelArgs = [];\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, '', strokeKey);\n                                    anchorX =\n                                        /** @type {number} */ (part[2]) +\n                                            (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                                    anchorY =\n                                        baseline * label.height +\n                                            ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                                                textScale[0] -\n                                            offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.createLabel(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    var dimensions = this.calculateImageOrLabelDimensions_(label.width, label.height, part[0], part[1], label.width, label.height, anchorX, anchorY, 0, 0, part[3], pixelRatioScale, false, defaultPadding, false, feature);\n                                    if (opt_declutterTree &&\n                                        opt_declutterTree.collides(dimensions.declutterBox)) {\n                                        break drawChars;\n                                    }\n                                    replayImageOrLabelArgs.push([\n                                        context,\n                                        contextScale,\n                                        label,\n                                        dimensions,\n                                        1,\n                                        null,\n                                        null,\n                                    ]);\n                                }\n                            }\n                            if (opt_declutterTree) {\n                                opt_declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n                            }\n                            for (var i_1 = 0, ii_1 = replayImageOrLabelArgs.length; i_1 < ii_1; ++i_1) {\n                                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i_1]);\n                            }\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (opt_featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = opt_featureCallback(feature, currentGeometry);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    Executor.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, contextScale, transform, this.instructions, snapToPixel, undefined, undefined, opt_declutterTree);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {FeatureCallback<T>=} opt_featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check\n     *     features that intersect this extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, 1, transform, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}());\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { isEmpty } from '../../obj.js';\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { transform2D } from '../../geom/flat/transform.js';\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT,\n];\nvar ExecutorGroup = /** @class */ (function () {\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n         */\n        this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        this.hitDetectionTransform_ = createTransform();\n        this.createExecutors_(allInstructions);\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                executors = {};\n                this.executorsByZIndex_[zIndex] = executors;\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            var renderBuffer = [this.renderBuffer_ || 0, this.renderBuffer_ || 0];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions, renderBuffer);\n            }\n        }\n    };\n    /**\n     * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        var newContext = !this.hitDetectionContext_;\n        if (newContext) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize ||\n            context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else if (!newContext) {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var indexes = getPixelIndexArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @return {T|undefined} Callback result.\n         */\n        function featureCallback(feature, geometry) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize)\n                .data;\n            for (var i_1 = 0, ii = indexes.length; i_1 < ii; i_1++) {\n                if (imageData[indexes[i_1]] > 0) {\n                    if (!declutteredFeatures ||\n                        (builderType !== BuilderType.IMAGE &&\n                            builderType !== BuilderType.TEXT) ||\n                        declutteredFeatures.indexOf(feature) !== -1) {\n                        var idx = (indexes[i_1] - 3) / 4;\n                        var x = hitTolerance - (idx % contextSize);\n                        var y = hitTolerance - ((idx / contextSize) | 0);\n                        var result_1 = callback(feature, geometry, x * x + y * y);\n                        if (result_1) {\n                            return result_1;\n                        }\n                    }\n                    context.clearRect(0, 0, contextSize, contextSize);\n                    break;\n                }\n            }\n            return undefined;\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} contextScale Scale of the context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<import(\"./BuilderType.js\").default>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    ExecutorGroup.prototype.execute = function (context, contextScale, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterTree) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        if (opt_declutterTree) {\n            zs.reverse();\n        }\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    replay.execute(context, contextScale, transform, viewRotation, snapToPixel, opt_declutterTree);\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}());\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nvar circlePixelIndexArrayCache = {};\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n    if (circlePixelIndexArrayCache[radius] !== undefined) {\n        return circlePixelIndexArrayCache[radius];\n    }\n    var size = radius * 2 + 1;\n    var maxDistanceSq = radius * radius;\n    var distances = new Array(maxDistanceSq + 1);\n    for (var i = 0; i <= radius; ++i) {\n        for (var j = 0; j <= radius; ++j) {\n            var distanceSq = i * i + j * j;\n            if (distanceSq > maxDistanceSq) {\n                break;\n            }\n            var distance = distances[distanceSq];\n            if (!distance) {\n                distance = [];\n                distances[distanceSq] = distance;\n            }\n            distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n            if (i > 0) {\n                distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n            }\n            if (j > 0) {\n                distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n                if (i > 0) {\n                    distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n                }\n            }\n        }\n    }\n    var pixelIndex = [];\n    for (var i = 0, ii = distances.length; i < ii; ++i) {\n        if (distances[i]) {\n            pixelIndex.push.apply(pixelIndex, distances[i]);\n        }\n    }\n    circlePixelIndexArrayCache[radius] = pixelIndex;\n    return pixelIndex;\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: this.pixelRatio_ *\n                    (strokeStyleWidth !== undefined\n                        ? strokeStyleWidth\n                        : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageSize = imageStyle.getSize();\n            if (!imageSize) {\n                this.image_ = null;\n            }\n            else {\n                var imageAnchor = imageStyle.getAnchor();\n                // FIXME pixel ratio\n                var imageImage = imageStyle.getImage(1);\n                var imageOrigin = imageStyle.getOrigin();\n                var imageScale = imageStyle.getScaleArray();\n                this.imageAnchorX_ = imageAnchor[0];\n                this.imageAnchorY_ = imageAnchor[1];\n                this.imageHeight_ = imageSize[1];\n                this.image_ = imageImage;\n                this.imageOpacity_ = imageStyle.getOpacity();\n                this.imageOriginX_ = imageOrigin[0];\n                this.imageOriginY_ = imageOrigin[1];\n                this.imageRotateWithView_ = imageStyle.getRotateWithView();\n                this.imageRotation_ = imageStyle.getRotation();\n                this.imageScale_ = [\n                    this.pixelRatio_ * imageScale[0],\n                    this.pixelRatio_ * imageScale[1],\n                ];\n                this.imageWidth_ = imageSize[0];\n            }\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry,\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform, opt_declutterBuilderGroup) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform, opt_declutterBuilderGroup) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature, opt_declutterBuilderGroup);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n    var declutterImageWithText;\n    if (opt_declutterBuilderGroup) {\n        builderGroup = opt_declutterBuilderGroup;\n        declutterImageWithText =\n            imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n    }\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, declutterImageWithText);\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, opt_declutterBuilderGroup) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle && textStyle.getText()) {\n        var textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle);\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport { apply, makeInverse, makeScale, toString as transformToString, } from '../../transform.js';\nimport { buffer, containsExtent, createEmpty, getWidth, intersects as intersectsExtent, wrapX as wrapExtentX, } from '../../extent.js';\nimport { createHitDetectionImageData, hitDetect, } from '../../render/canvas/hitdetect.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature, } from '../vector.js';\nimport { fromUserExtent, getTransformFromProjections, getUserProjection, toUserExtent, } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { wrapX as wrapCoordinateX } from '../../coordinate.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /** @private */\n        _this.boundHandleStyleImageChange_ = _this.handleStyleImageChange_.bind(_this);\n        /**\n         * @type {boolean}\n         */\n        _this.animatingOrInteracting_;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @type {ImageData}\n         */\n        _this.hitDetectionImageData_ = null;\n        /**\n         * @type {Array<import(\"../../Feature.js\").default>}\n         */\n        _this.renderedFeatures_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRotation_;\n        /**\n         * @private\n         * @type {import(\"../../coordinate\").Coordinate}\n         */\n        _this.renderedCenter_ = null;\n        /**\n         * @private\n         * @type {import(\"../../proj/Projection\").default}\n         */\n        _this.renderedProjection_ = null;\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        /**\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.declutterExecutorGroup = null;\n        /**\n         * Clipping to be performed by `renderFrame()`\n         * @type {boolean}\n         */\n        _this.clipping = true;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasVectorLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        if (opacity < 1) {\n            target = null;\n        }\n        _super.prototype.useContainer.call(this, target, transform, opacity);\n    };\n    /**\n     * @param {ExecutorGroup} executorGroup Executor group.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"rbush\").default=} opt_declutterTree Declutter tree.\n     */\n    CanvasVectorLayerRenderer.prototype.renderWorlds = function (executorGroup, frameState, opt_declutterTree) {\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var center = viewState.center;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        var pixelRatio = frameState.pixelRatio;\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var context = this.context;\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        var multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n        var worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n        var endWorld = multiWorld\n            ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n            : 1;\n        var world = multiWorld\n            ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n            : 0;\n        do {\n            var transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, world * worldWidth);\n            executorGroup.execute(context, 1, transform, rotation, snapToPixel, undefined, opt_declutterTree);\n        } while (++world < endWorld);\n    };\n    /**\n     * Render declutter items for this layer\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CanvasVectorLayerRenderer.prototype.renderDeclutter = function (frameState) {\n        if (this.declutterExecutorGroup) {\n            this.renderWorlds(this.declutterExecutorGroup, frameState, frameState.declutterTree);\n        }\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var pixelRatio = frameState.pixelRatio;\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        var canvasTransform = transformToString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        var declutterExecutorGroup = this.declutterExecutorGroup;\n        if ((!replayGroup || replayGroup.isEmpty()) &&\n            (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())) {\n            if (!this.containerReused && canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return this.container;\n        }\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        // clipped rendering if layer extent is set\n        var clipped = false;\n        if (layerState.extent && this.clipping) {\n            var layerExtent = fromUserExtent(layerState.extent, projection);\n            clipped =\n                !containsExtent(layerExtent, frameState.extent) &&\n                    intersectsExtent(layerExtent, frameState.extent);\n            if (clipped) {\n                this.clipUnrotated(context, frameState, layerExtent);\n            }\n        }\n        this.renderWorlds(replayGroup, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        var container = this.container;\n        if (opacity !== parseFloat(container.style.opacity)) {\n            container.style.opacity = opacity === 1 ? '' : String(opacity);\n        }\n        if (this.renderedRotation_ !== viewState.rotation) {\n            this.renderedRotation_ = viewState.rotation;\n            this.hitDetectionImageData_ = null;\n        }\n        return this.container;\n    };\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n     */\n    CanvasVectorLayerRenderer.prototype.getFeatures = function (pixel) {\n        return new Promise(\n        /**\n         * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (resolve) {\n            if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n                var size = [this.context.canvas.width, this.context.canvas.height];\n                apply(this.pixelTransform, size);\n                var center = this.renderedCenter_;\n                var resolution = this.renderedResolution_;\n                var rotation = this.renderedRotation_;\n                var projection = this.renderedProjection_;\n                var extent = this.renderedExtent_;\n                var layer = this.getLayer();\n                var transforms = [];\n                var width = size[0] / 2;\n                var height = size[1] / 2;\n                transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, 0).slice());\n                var source = layer.getSource();\n                var projectionExtent = projection.getExtent();\n                if (source.getWrapX() &&\n                    projection.canWrapX() &&\n                    !containsExtent(projectionExtent, extent)) {\n                    var startX = extent[0];\n                    var worldWidth = getWidth(projectionExtent);\n                    var world = 0;\n                    var offsetX = void 0;\n                    while (startX < projectionExtent[0]) {\n                        --world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX += worldWidth;\n                    }\n                    world = 0;\n                    startX = extent[2];\n                    while (startX > projectionExtent[2]) {\n                        ++world;\n                        offsetX = worldWidth * world;\n                        transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n                        startX -= worldWidth;\n                    }\n                }\n                this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms, this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n            }\n            resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n     * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, matches) {\n        var _this = this;\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        var layer = this.getLayer();\n        /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n        var features = {};\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n         * @param {number} distanceSq The squared distance to the click position\n         * @return {T|undefined} Callback result.\n         */\n        var featureCallback = function (feature, geometry, distanceSq) {\n            var key = getUid(feature);\n            var match = features[key];\n            if (!match) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    return callback(feature, layer, geometry);\n                }\n                matches.push((features[key] = {\n                    feature: feature,\n                    layer: layer,\n                    geometry: geometry,\n                    distanceSq: distanceSq,\n                    callback: callback,\n                }));\n            }\n            else if (match !== true && distanceSq < match.distanceSq) {\n                if (distanceSq === 0) {\n                    features[key] = true;\n                    matches.splice(matches.lastIndexOf(match), 1);\n                    return callback(feature, layer, geometry);\n                }\n                match.geometry = geometry;\n                match.distanceSq = distanceSq;\n            }\n            return undefined;\n        };\n        var result;\n        var executorGroups = [this.replayGroup_];\n        if (this.declutterExecutorGroup) {\n            executorGroups.push(this.declutterExecutorGroup);\n        }\n        executorGroups.some(function (executorGroup) {\n            return (result = executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, featureCallback, executorGroup === _this.declutterExecutorGroup\n                ? frameState.declutterTree.all().map(function (item) { return item.value; })\n                : null));\n        });\n        return result;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = this.getLayer();\n        var vectorSource = vectorLayer.getSource();\n        if (!vectorSource) {\n            return false;\n        }\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if ((!this.dirty_ && !updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            this.animatingOrInteracting_ = true;\n            return true;\n        }\n        this.animatingOrInteracting_ = false;\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var center = viewState.center.slice();\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var loadExtents = [extent.slice()];\n        var projectionExtent = projection.getExtent();\n        if (vectorSource.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n            wrapCoordinateX(center, projection);\n            var loadExtent = wrapExtentX(loadExtents[0], projection);\n            // If the extent crosses the date line, we load data for both edges of the worlds\n            if (loadExtent[0] < projectionExtent[0] &&\n                loadExtent[2] < projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] + worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] + worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n            else if (loadExtent[0] > projectionExtent[0] &&\n                loadExtent[2] > projectionExtent[2]) {\n                loadExtents.push([\n                    loadExtent[0] - worldWidth,\n                    loadExtent[1],\n                    loadExtent[2] - worldWidth,\n                    loadExtent[3],\n                ]);\n            }\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        var declutterBuilderGroup;\n        if (this.getLayer().getDeclutter()) {\n            declutterBuilderGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio);\n        }\n        var userProjection = getUserProjection();\n        var userTransform;\n        if (userProjection) {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(toUserExtent(loadExtents[i], projection), resolution, userProjection);\n            }\n            userTransform = getTransformFromProjections(userProjection, projection);\n        }\n        else {\n            for (var i = 0, ii = loadExtents.length; i < ii; ++i) {\n                vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n            }\n        }\n        var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n        var render = \n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform, declutterBuilderGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        var userExtent = toUserExtent(extent, projection);\n        /** @type {Array<import(\"../../Feature.js\").default>} */\n        var features = vectorSource.getFeaturesInExtent(userExtent);\n        if (vectorLayerRenderOrder) {\n            features.sort(vectorLayerRenderOrder);\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            render(features[i]);\n        }\n        this.renderedFeatures_ = features;\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        if (declutterBuilderGroup) {\n            this.declutterExecutorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), declutterBuilderGroup.finish(), vectorLayer.getRenderBuffer());\n        }\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.renderedCenter_ = center;\n        this.renderedProjection_ = projection;\n        this.replayGroup_ = executorGroup;\n        this.hitDetectionImageData_ = null;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} squaredTolerance Squared render tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_transform Transform from user to view projection.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default=} opt_declutterBuilderGroup Builder for decluttering.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, builderGroup, opt_transform, opt_declutterBuilderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading =\n                    renderFeature(builderGroup, feature, styles[i], squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, squaredTolerance, this.boundHandleStyleImageChange_, opt_transform, opt_declutterBuilderGroup);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/render/canvas/hitdetect\n */\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport { Icon } from '../../style.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { intersects } from '../../extent.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n    var width = size[0] / 2;\n    var height = size[1] / 2;\n    var context = createCanvasContext2D(width, height);\n    context.imageSmoothingEnabled = false;\n    var canvas = context.canvas;\n    var renderer = new CanvasImmediateRenderer(context, 0.5, extent, null, rotation);\n    var featureCount = features.length;\n    // Stretch hit detection index to use the whole available color range\n    var indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n    var featuresByZIndex = {};\n    for (var i = 1; i <= featureCount; ++i) {\n        var feature = features[i - 1];\n        var featureStyleFunction = feature.getStyleFunction() || styleFunction;\n        if (!styleFunction) {\n            continue;\n        }\n        var styles = featureStyleFunction(feature, resolution);\n        if (!styles) {\n            continue;\n        }\n        if (!Array.isArray(styles)) {\n            styles = [styles];\n        }\n        var index = i * indexFactor;\n        var color = '#' + ('000000' + index.toString(16)).slice(-6);\n        for (var j = 0, jj = styles.length; j < jj; ++j) {\n            var originalStyle = styles[j];\n            var style = originalStyle.clone();\n            var fill = style.getFill();\n            if (fill) {\n                fill.setColor(color);\n            }\n            var stroke = style.getStroke();\n            if (stroke) {\n                stroke.setColor(color);\n            }\n            style.setText(undefined);\n            var image = originalStyle.getImage();\n            if (image) {\n                var imgSize = image.getImageSize();\n                if (!imgSize) {\n                    continue;\n                }\n                var canvas_1 = document.createElement('canvas');\n                canvas_1.width = imgSize[0];\n                canvas_1.height = imgSize[1];\n                var imgContext = canvas_1.getContext('2d', { alpha: false });\n                imgContext.fillStyle = color;\n                var img = imgContext.canvas;\n                imgContext.fillRect(0, 0, img.width, img.height);\n                var width_1 = imgSize ? imgSize[0] : img.width;\n                var height_1 = imgSize ? imgSize[1] : img.height;\n                var iconContext = createCanvasContext2D(width_1, height_1);\n                iconContext.drawImage(img, 0, 0);\n                style.setImage(new Icon({\n                    img: img,\n                    imgSize: imgSize,\n                    anchor: image.getAnchor(),\n                    anchorXUnits: IconAnchorUnits.PIXELS,\n                    anchorYUnits: IconAnchorUnits.PIXELS,\n                    offset: image.getOrigin(),\n                    size: image.getSize(),\n                    opacity: image.getOpacity(),\n                    scale: image.getScale(),\n                    rotation: image.getRotation(),\n                    rotateWithView: image.getRotateWithView(),\n                }));\n            }\n            var zIndex = Number(style.getZIndex());\n            var byGeometryType = featuresByZIndex[zIndex];\n            if (!byGeometryType) {\n                byGeometryType = {};\n                featuresByZIndex[zIndex] = byGeometryType;\n                byGeometryType[GeometryType.POLYGON] = [];\n                byGeometryType[GeometryType.CIRCLE] = [];\n                byGeometryType[GeometryType.LINE_STRING] = [];\n                byGeometryType[GeometryType.POINT] = [];\n            }\n            var geometry = style.getGeometryFunction()(feature);\n            if (geometry && intersects(extent, geometry.getExtent())) {\n                byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n            }\n        }\n    }\n    var zIndexKeys = Object.keys(featuresByZIndex)\n        .map(Number)\n        .sort(numberSafeCompareFunction);\n    for (var i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n        var byGeometryType = featuresByZIndex[zIndexKeys[i]];\n        for (var type in byGeometryType) {\n            var geomAndStyle = byGeometryType[type];\n            for (var j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n                renderer.setStyle(geomAndStyle[j + 1]);\n                for (var k = 0, kk = transforms.length; k < kk; ++k) {\n                    renderer.setTransform(transforms[k]);\n                    renderer.drawGeometry(geomAndStyle[j]);\n                }\n            }\n        }\n    }\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n    var resultFeatures = [];\n    if (imageData) {\n        var index = (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) *\n            4;\n        var r = imageData.data[index];\n        var g = imageData.data[index + 1];\n        var b = imageData.data[index + 2];\n        var i = b + 256 * (g + 256 * r);\n        var indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n        if (i && i % indexFactor === 0) {\n            resultFeatures.push(features[i / indexFactor - 1]);\n        }\n    }\n    return resultFeatures;\n}\n//# sourceMappingURL=hitdetect.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        multiPoint.applyProperties(this);\n        return multiPoint;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates\n            ? 0\n            : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { closestSquaredDistanceXY, createOrUpdateEmpty, extend, getCenter, } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.changeEventsKeys_ = [];\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        this.changeEventsKeys_.forEach(unlistenByKey);\n        this.changeEventsKeys_.length = 0;\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            this.changeEventsKeys_.push(listen(this.geometries_[i], EventType.CHANGE, this.changed, this));\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        geometryCollection.applyProperties(this);\n        return geometryCollection;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArrayRecursive = function () {\n        /** @type {Array<Geometry>} */\n        var geometriesArray = [];\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].getType() === this.getType()) {\n                geometriesArray = geometriesArray.concat(\n                /** @type {GeometryCollection} */ (geometries[i]).getGeometriesArrayRecursive());\n            }\n            else {\n                geometriesArray.push(geometries[i]);\n            }\n        }\n        return geometriesArray;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {GeometryCollection} Simplified GeometryCollection.\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometries = [];\n        var geometries = this.geometries_;\n        var simplified = false;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var geometry = geometries[i];\n            var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n            simplifiedGeometries.push(simplifiedGeometry);\n            if (simplifiedGeometry !== geometry) {\n                simplified = true;\n            }\n        }\n        if (simplified) {\n            var simplifiedGeometryCollection = new GeometryCollection(null);\n            simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n            return simplifiedGeometryCollection;\n        }\n        else {\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * Clean up.\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { assign } from '../obj.js';\nimport { equivalent as equivalentProjection, get as getProjection, transformExtent, } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            var dataProjection = opt_options.dataProjection\n                ? getProjection(opt_options.dataProjection)\n                : this.readProjection(source);\n            if (opt_options.extent &&\n                dataProjection &&\n                dataProjection.getUnits() === Units.TILE_PIXELS) {\n                dataProjection = getProjection(dataProjection);\n                dataProjection.setWorldExtent(opt_options.extent);\n            }\n            options = {\n                dataProjection: dataProjection,\n                featureProjection: opt_options.featureProjection,\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection,\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    var transformed;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write &&\n        opt_options &&\n        /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, \n        /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options\n        ? getProjection(opt_options.featureProjection)\n        : null;\n    var dataProjection = opt_options\n        ? getProjection(opt_options.dataProjection)\n        : null;\n    if (featureProjection &&\n        dataProjection &&\n        !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport { abstract } from '../util.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_dimension Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest, opt_dimension) {\n    var o, t;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        o = offset;\n    }\n    else if (n === 2) {\n        o = offset;\n        t = fraction;\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            t =\n                (target - cumulativeLengths[-index - 2]) /\n                    (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            o = offset + (-index - 2) * stride;\n        }\n        else {\n            o = offset + index * stride;\n        }\n    }\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var dest = opt_dest ? opt_dest : new Array(dimension);\n    for (var i = 0; i < dimension; ++i) {\n        dest[i] =\n            o === undefined\n                ? NaN\n                : t === undefined\n                    ? flatCoordinates[o + i]\n                    : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        var lineString = new LineString(this.flatCoordinates.slice(), this.layout);\n        lineString.applyProperties(this);\n        return lineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest, this.stride);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} Simplified LineString.\n     * @protected\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\nimport { extend } from '../array.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM, } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        var multiLineString = new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n        multiLineString.applyProperties(this);\n        return multiLineString;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiLineString} Simplified MultiLineString.\n     * @protected\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta, } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray, } from './flat/orient.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        var multiPolygon = new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n        multiPolygon.applyProperties(this);\n        return multiPolygon;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {MultiPolygon} Simplified MultiPolygon.\n     * @protected\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length =\n                lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assert } from '../asserts.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { transformGeometryWithOptions } from './Feature.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.dataProjection = getProjection(options.dataProjection ? options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null,\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ &&\n            'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<Feature>} Features.\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @param {GeoJSONGeometry} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(object, opt_options);\n    };\n    /**\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else if (crs['type'] === 'EPSG') {\n                projection = getProjection('EPSG:' + crs['properties']['code']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null,\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        if (!feature.hasProperties()) {\n            return object;\n        }\n        var properties = feature.getProperties();\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n            delete properties[feature.getGeometryName()];\n        }\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects,\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(\n            /** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(\n            /** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(\n            /** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(\n            /** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(\n            /** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(\n            /** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(\n            /** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(\n            /** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(\n            /** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(\n            /** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(\n            /** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(\n            /** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: [],\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries,\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates(),\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right),\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport ProjUnits from '../proj/Units.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { METERS_PER_UNIT, getPointResolution } from '../proj.js';\nimport { assert } from '../asserts.js';\nimport { getChangeEventType } from '../Object.js';\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n    DEGREES: 'degrees',\n    IMPERIAL: 'imperial',\n    NAUTICAL: 'nautical',\n    METRIC: 'metric',\n    US: 'us',\n};\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n/**\n * @const\n * @type {number}\n */\nvar DEFAULT_DPI = 25.4 / 0.28;\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {import(\"./ScaleLine.js\").Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nvar ScaleLine = /** @class */ (function (_super) {\n    __extends(ScaleLine, _super);\n    /**\n     * @param {Options=} opt_options Scale line options.\n     */\n    function ScaleLine(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var className = options.className !== undefined\n            ? options.className\n            : options.bar\n                ? 'ol-scale-bar'\n                : 'ol-scale-line';\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.innerElement_ = document.createElement('div');\n        _this.innerElement_.className = className + '-inner';\n        _this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n        _this.element.appendChild(_this.innerElement_);\n        /**\n         * @private\n         * @type {?import(\"../View.js\").State}\n         */\n        _this.viewState_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderedWidth_ = undefined;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = '';\n        _this.addEventListener(getChangeEventType(UNITS_PROP), _this.handleUnitsChanged_);\n        _this.setUnits(options.units || Units.METRIC);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBar_ = options.bar || false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.scaleBarSteps_ = options.steps || 4;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBarText_ = options.text || false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.dpi_ = options.dpi || undefined;\n        return _this;\n    }\n    /**\n     * Return the units to use in the scale line.\n     * @return {import(\"./ScaleLine.js\").Units} The units\n     * to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.getUnits = function () {\n        return this.get(UNITS_PROP);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.handleUnitsChanged_ = function () {\n        this.updateElement_();\n    };\n    /**\n     * Set the units to use in the scale line.\n     * @param {import(\"./ScaleLine.js\").Units} units The units to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.setUnits = function (units) {\n        this.set(UNITS_PROP, units);\n    };\n    /**\n     * Specify the dpi of output device such as printer.\n     * @param {number|undefined} dpi The dpi of output device.\n     * @api\n     */\n    ScaleLine.prototype.setDpi = function (dpi) {\n        this.dpi_ = dpi;\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.updateElement_ = function () {\n        var viewState = this.viewState_;\n        if (!viewState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var center = viewState.center;\n        var projection = viewState.projection;\n        var units = this.getUnits();\n        var pointResolutionUnits = units == Units.DEGREES ? ProjUnits.DEGREES : ProjUnits.METERS;\n        var pointResolution = getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n        var minWidth = (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n        var nominalCount = minWidth * pointResolution;\n        var suffix = '';\n        if (units == Units.DEGREES) {\n            var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n            nominalCount *= metersPerDegree;\n            if (nominalCount < metersPerDegree / 60) {\n                suffix = '\\u2033'; // seconds\n                pointResolution *= 3600;\n            }\n            else if (nominalCount < metersPerDegree) {\n                suffix = '\\u2032'; // minutes\n                pointResolution *= 60;\n            }\n            else {\n                suffix = '\\u00b0'; // degrees\n            }\n        }\n        else if (units == Units.IMPERIAL) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution /= 0.0254;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.3048;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.344;\n            }\n        }\n        else if (units == Units.NAUTICAL) {\n            pointResolution /= 1852;\n            suffix = 'nm';\n        }\n        else if (units == Units.METRIC) {\n            if (nominalCount < 0.001) {\n                suffix = 'μm';\n                pointResolution *= 1000000;\n            }\n            else if (nominalCount < 1) {\n                suffix = 'mm';\n                pointResolution *= 1000;\n            }\n            else if (nominalCount < 1000) {\n                suffix = 'm';\n            }\n            else {\n                suffix = 'km';\n                pointResolution /= 1000;\n            }\n        }\n        else if (units == Units.US) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution *= 39.37;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.30480061;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.3472;\n            }\n        }\n        else {\n            assert(false, 33); // Invalid units\n        }\n        var i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n        var count, width, decimalCount;\n        while (true) {\n            decimalCount = Math.floor(i / 3);\n            var decimal = Math.pow(10, decimalCount);\n            count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n            width = Math.round(count / pointResolution);\n            if (isNaN(width)) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n                return;\n            }\n            else if (width >= minWidth) {\n                break;\n            }\n            ++i;\n        }\n        var html;\n        if (this.scaleBar_) {\n            html = this.createScaleBar(width, count, suffix);\n        }\n        else {\n            html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n        }\n        if (this.renderedHTML_ != html) {\n            this.innerElement_.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n        if (this.renderedWidth_ != width) {\n            this.innerElement_.style.width = width + 'px';\n            this.renderedWidth_ = width;\n        }\n        if (!this.renderedVisible_) {\n            this.element.style.display = '';\n            this.renderedVisible_ = true;\n        }\n    };\n    /**\n     * @private\n     * @param {number} width The current width of the scalebar.\n     * @param {number} scale The current scale.\n     * @param {string} suffix The suffix to append to the scale text.\n     * @returns {string} The stringified HTML of the scalebar.\n     */\n    ScaleLine.prototype.createScaleBar = function (width, scale, suffix) {\n        var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n        var scaleSteps = [];\n        var stepWidth = width / this.scaleBarSteps_;\n        var backgroundColor = '#ffffff';\n        for (var i = 0; i < this.scaleBarSteps_; i++) {\n            if (i === 0) {\n                // create the first marker at position 0\n                scaleSteps.push(this.createMarker('absolute', i));\n            }\n            scaleSteps.push('<div>' +\n                '<div ' +\n                'class=\"ol-scale-singlebar\" ' +\n                'style=' +\n                '\"width: ' +\n                stepWidth +\n                'px;' +\n                'background-color: ' +\n                backgroundColor +\n                ';\"' +\n                '>' +\n                '</div>' +\n                this.createMarker('relative', i) +\n                /*render text every second step, except when only 2 steps */\n                (i % 2 === 0 || this.scaleBarSteps_ === 2\n                    ? this.createStepText(i, width, false, scale, suffix)\n                    : '') +\n                '</div>');\n            if (i === this.scaleBarSteps_ - 1) {\n                {\n                    /*render text at the end */\n                }\n                scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n            }\n            // switch colors of steps between black and white\n            if (backgroundColor === '#ffffff') {\n                backgroundColor = '#000000';\n            }\n            else {\n                backgroundColor = '#ffffff';\n            }\n        }\n        var scaleBarText;\n        if (this.scaleBarText_) {\n            scaleBarText =\n                '<div ' +\n                    'class=\"ol-scale-text\" ' +\n                    'style=\"width: ' +\n                    width +\n                    'px;\">' +\n                    mapScale +\n                    '</div>';\n        }\n        else {\n            scaleBarText = '';\n        }\n        var container = '<div ' +\n            'style=\"display: flex;\">' +\n            scaleBarText +\n            scaleSteps.join('') +\n            '</div>';\n        return container;\n    };\n    /**\n     * Creates a marker at given position\n     * @param {string} position - The position, absolute or relative\n     * @param {number} i - The iterator\n     * @returns {string} The stringified div containing the marker\n     */\n    ScaleLine.prototype.createMarker = function (position, i) {\n        var top = position === 'absolute' ? 3 : -10;\n        return ('<div ' +\n            'class=\"ol-scale-step-marker\" ' +\n            'style=\"position: ' +\n            position +\n            ';' +\n            'top: ' +\n            top +\n            'px;\"' +\n            '></div>');\n    };\n    /**\n     * Creates the label for a marker marker at given position\n     * @param {number} i - The iterator\n     * @param {number} width - The width the scalebar will currently use\n     * @param {boolean} isLast - Flag indicating if we add the last step text\n     * @param {number} scale - The current scale for the whole scalebar\n     * @param {string} suffix - The suffix for the scale\n     * @returns {string} The stringified div containing the step text\n     */\n    ScaleLine.prototype.createStepText = function (i, width, isLast, scale, suffix) {\n        var length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n        var lengthString = length + (i === 0 ? '' : ' ' + suffix);\n        var margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n        var minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n        return ('<div ' +\n            'class=\"ol-scale-step-text\" ' +\n            'style=\"' +\n            'margin-left: ' +\n            margin +\n            'px;' +\n            'text-align: ' +\n            (i === 0 ? 'left' : 'center') +\n            '; ' +\n            'min-width: ' +\n            minWidth +\n            'px;' +\n            'left: ' +\n            (isLast ? width + 'px' : 'unset') +\n            ';\"' +\n            '>' +\n            lengthString +\n            '</div>');\n    };\n    /**\n     * Returns the appropriate scale for the given resolution and units.\n     * @return {number} The appropriate scale.\n     */\n    ScaleLine.prototype.getScaleForResolution = function () {\n        var resolution = getPointResolution(this.viewState_.projection, this.viewState_.resolution, this.viewState_.center);\n        var dpi = this.dpi_ || DEFAULT_DPI;\n        var mpu = this.viewState_.projection.getMetersPerUnit();\n        var inchesPerMeter = 1000 / 25.4;\n        return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n    };\n    /**\n     * Update the scale line element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    ScaleLine.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            this.viewState_ = null;\n        }\n        else {\n            this.viewState_ = frameState.viewState;\n        }\n        this.updateElement_();\n    };\n    return ScaleLine;\n}(Control));\nexport default ScaleLine;\n//# sourceMappingURL=ScaleLine.js.map","import 'ol/ol.css';\r\nimport ImageLayer from 'ol/layer/Image';\r\nimport Map from 'ol/Map';\r\nimport Projection from 'ol/proj/Projection';\r\nimport Static from 'ol/source/ImageStatic';\r\nimport View from 'ol/View';\r\nimport {getCenter} from 'ol/extent';\r\nimport Overlay from 'ol/Overlay';\r\nimport Feature from 'ol/Feature';\r\nimport {Circle as CircleStyle, Style, Fill, Stroke, Text} from 'ol/style';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport MultiPoint from 'ol/geom/MultiPoint';\r\nimport GeoJSON from 'ol/format/GeoJSON';\r\nimport {Select, defaults as defaultInteractions} from 'ol/interaction';\r\nimport LayerGroup from 'ol/layer/Group';\r\nimport {ZoomToExtent, Control, defaults as defaultControls} from 'ol/control';\r\nimport ScaleLine from 'ol/control/ScaleLine';\r\nimport * as Modules from './modules/modules.js';\r\n\r\n// Map views always need a projection.  Here we just want to map image\r\n// coordinates directly to map coordinates, so we create a projection that uses\r\n// the image extent in pixels.\r\nvar upperMapExtent = [0, 0, 2047, 1458];\r\n\r\n// define here paths to image files for the lower view\r\n// their size and their pixel size\r\nconst pics = {\r\n  'pic01': {\r\n    url:'images/01_Soma_nearPeri_I.png',\r\n    extent:[0, 0, 4007, 2671],\r\n    imageSize:[4008, 2672],\r\n    metersPerUnit: 0.00108419e-6, // um\r\n  },\r\n  'pic02': {\r\n    url:'images/02_Soma_nearNuc.png',\r\n    extent:[0, 0, 4007, 2671],\r\n    imageSize:[4008, 2672],\r\n    metersPerUnit: 0.00108419e-6,  // um\r\n  },\r\n  'pic03': {\r\n    url:'images/03_Soma_nearPeri_II.png',\r\n    extent:[0, 0, 4007, 2671],\r\n    imageSize:[4008, 2672],\r\n    metersPerUnit: 0.00108419e-6,  // um\r\n  },\r\n  'pic04': {\r\n    url:'images/04_Base_AxonDend.png',\r\n    extent:[0, 0, 4007, 2671],\r\n    imageSize:[4008, 2672],\r\n    metersPerUnit: 0.00108419e-6,  // um\r\n  },\r\n  'pic05': {\r\n    url:'images/05_Axon_base.png',\r\n    extent:[0, 0, 4007, 2671],\r\n    imageSize:[4008, 2672],\r\n    metersPerUnit: 0.00108419e-6,  // um\r\n  },\r\n  'pic06': {\r\n    url:'images/06_AlongAxon.png',\r\n    extent:[0, 0, 4007, 2671],\r\n    imageSize:[4008, 2672],\r\n    metersPerUnit: 0.00108419e-6,  // um\r\n  },\r\n  'pic07': {\r\n    url:'images/07_Axon_termi.png',\r\n    extent:[0, 0, 4007, 2671],\r\n    imageSize:[4008, 2672],\r\n    metersPerUnit: 0.00108419e-6,  // um\r\n  },\r\n  'pic08': {\r\n    url:'images/08_Dend_base.png',\r\n    extent:[0, 0, 4007, 2671],\r\n    imageSize:[4008, 2672],\r\n    metersPerUnit: 0.00108419e-6,  // um\r\n  },\r\n  'pic09': {\r\n    url:'images/09_Prox_dend.png',\r\n    extent:[0, 0, 4007, 2671],\r\n    imageSize:[4008, 2672],\r\n    metersPerUnit: 0.00108419e-6,  // um\r\n  },\r\n  'pic10': {\r\n    url:'images/10_Synapses_alongDen.png',\r\n    extent:[0, 0, 4007, 2671],\r\n    imageSize:[4008, 2672],\r\n    metersPerUnit: 0.00108419e-6,  // um\r\n  },\r\n  'pic11': {\r\n    url:'images/11_Dist_dend.png',\r\n    extent:[0, 0, 4007, 2671],\r\n    imageSize:[4008, 2672],\r\n    metersPerUnit: 0.00108419e-6,  // um\r\n  },\r\n  'pic12': {\r\n    url:'images/12_Dend_termi.png',\r\n    extent:[0, 0, 4007, 2671],\r\n    imageSize:[4008, 2672],\r\n    metersPerUnit: 0.00108419e-6,  // um\r\n  },\r\n\r\n\r\n}\r\n\r\n// define ROIs as geojsonObject\r\nvar geojsonObject = {\r\n  'type': 'FeatureCollection',\r\n  'crs': {\r\n    'type': 'name',\r\n    'properties': {\r\n      'name': 'EPSG:3857',\r\n    },\r\n  },\r\n  'features': [\r\n    {\r\n      'type': 'Feature',\r\n\t  'id': 'pic01',\r\n\t  'geometry': {\r\n        'type': 'Polygon',\r\n        'coordinates': [\r\n          [\r\n            [788, 661],\r\n            [828, 661],\r\n            [828, 621],\r\n            [788, 621],\r\n            [788, 661] ] ],\r\n      },\r\n\t  'properties': {\r\n        'info': '<b>Filename:</b> 01_Soma_nearPeri_I.png<br>' +\r\n            '<em>1. Soma near periphery I: Here, long ER profiles consisting of ER sheets studded with ' +\r\n            'ribosomes and multiple ER contacts , eg. ER-mitochondria, ER-PM and ER exit sites can be ' +\r\n            'seen in the image\\n</em>',\r\n        'name': '01',\r\n\t  }\r\n    },\r\n    {\r\n      'type': 'Feature',\r\n      'id': 'pic02',\r\n      'geometry': {\r\n        'type': 'Polygon',\r\n        'coordinates': [\r\n          [\r\n            [780, 680],\r\n            [820, 680],\r\n            [820, 640],\r\n            [780, 640],\r\n            [780, 680] ] ],\r\n      },\r\n      'properties': {\r\n        'info': '<b>Filename:</b> 02_Soma_nearNuc.png<br>' +\r\n            '<em>2. Soma near nucleus: Relatively shorter ER profiles are seen consisting ' +\r\n            'of ribosome studded sheets in perinuclear area, tubular ER near Golgi and ' +\r\n            'ribosome studded ER sheets near mitochondria</em>',\r\n        'name': '02',\r\n      }\r\n    },\r\n    {\r\n      'type': 'Feature',\r\n      'id': 'pic03',\r\n      'geometry': {\r\n        'type': 'Polygon',\r\n        'coordinates': [\r\n          [\r\n            [766, 782],\r\n            [806, 782],\r\n            [806, 742],\r\n            [766, 742],\r\n            [766, 782] ] ],\r\n      },\r\n      'properties': {\r\n        'info': '<b>Filename:</b> 03_Soma_nearPeri_II.png<br>' +\r\n            '<em>3. Soma near periphery II: Long ER profiles – ribosome studded sheets. ' +\r\n            'Multiple types of ER-other organelle contacts including ER-mitochondria, ' +\r\n            'ER-PM, ER-lysosome can be seen</em>',\r\n        'name': '03',\r\n      }\r\n    },\r\n    {\r\n      'type': 'Feature',\r\n      'id': 'pic04',\r\n      'geometry': {\r\n        'type': 'Polygon',\r\n        'coordinates': [\r\n          [\r\n            [628, 763],\r\n            [668, 763],\r\n            [668, 723],\r\n            [628, 723],\r\n            [628, 763] ] ],\r\n      },\r\n      'properties': {\r\n        'info': '<b>Filename:</b> 04_Base_AxonDend.png<br>' +\r\n            '<em>4. Base of axon and dendrite: This region is marked by relatively shorter ' +\r\n            'ER profiles – ribosome studded sheets and tubules, a sparsity of ' +\r\n            'polyribosomes especially at the axon base is seen</em>',\r\n        'name': '04',\r\n      }\r\n    },\r\n    {\r\n      'type': 'Feature',\r\n      'id': 'pic05',\r\n      'geometry': {\r\n        'type': 'Polygon',\r\n        'coordinates': [\r\n          [\r\n            [615, 734],\r\n            [655, 734],\r\n            [655, 694],\r\n            [615, 694],\r\n            [615, 734] ] ],\r\n      },\r\n      'properties': {\r\n        'info': '<b>Filename:</b> 05_Axon_base.png<br>' +\r\n            '<em>5. Axon hillock region: Has relatively shorter ER profiles – ' +\r\n            'ribosome studded sheets and tubules, fewer or almost absent ribosome ' +\r\n            'clusters or polyribosomes compared to that in soma region</em>',\r\n        'name': '05',\r\n      }\r\n    },\r\n    {\r\n      'type': 'Feature',\r\n      'id': 'pic06',\r\n      'geometry': {\r\n        'type': 'Polygon',\r\n        'coordinates': [\r\n          [\r\n            [507, 423],\r\n            [547, 423],\r\n            [547, 383],\r\n            [507, 383],\r\n            [507, 423] ] ],\r\n      },\r\n      'properties': {\r\n        'info': '<b>Filename:</b> 06_AlongAxon.png<br>' +\r\n            '<em>6. Along Axon: Abundance of ER tubule profiles of different length and width, ' +\r\n            'ribosomes are present but in relatively far lesser density than in cell soma ' +\r\n            'and dendrites, ER sheets studded ribosomes are scarce if present</em>',\r\n        'name': '06',\r\n      }\r\n    },\r\n    {\r\n      'type': 'Feature',\r\n      'id': 'pic07',\r\n      'geometry': {\r\n        'type': 'Polygon',\r\n        'coordinates': [\r\n          [\r\n            [342, 62],\r\n            [382, 62],\r\n            [382, 22],\r\n            [342, 22],\r\n            [342, 62] ] ],\r\n      },\r\n      'properties': {\r\n        'info': '<b>Filename:</b> 07_Axon_termi.png<br>' +\r\n            '<em>7. Axon terminal: Tubules of different lengths and lumen width, ' +\r\n            'branched, ER sheets with and without ribosomes</em>',\r\n        'name': '07',\r\n      }\r\n    },\r\n    {\r\n      'type': 'Feature',\r\n      'id': 'pic08',\r\n      'geometry': {\r\n        'type': 'Polygon',\r\n        'coordinates': [\r\n          [\r\n            [832, 688],\r\n            [872, 688],\r\n            [872, 648],\r\n            [832, 648],\r\n            [832, 688] ] ],\r\n      },\r\n      'properties': {\r\n        'info': '<b>Filename:</b> 08_Dend_base.png<br>' +\r\n            '<em>8. Dendrite base: ER sheets and tubules of different ' +\r\n            'lengths and lumen width, branched profiles are seen in this region</em>',\r\n        'name': '08',\r\n      }\r\n    },\r\n    {\r\n      'type': 'Feature',\r\n      'id': 'pic09',\r\n      'geometry': {\r\n        'type': 'Polygon',\r\n        'coordinates': [\r\n          [\r\n            [916, 630],\r\n            [956, 630],\r\n            [956, 590],\r\n            [916, 590],\r\n            [916, 630] ] ],\r\n      },\r\n      'properties': {\r\n        'info': '<b>Filename:</b> 09_Prox_dend.png<br>' +\r\n            '<em>9. Proximal dendrite: ER tubules of different lengths ' +\r\n            'and lumen width, branched; Polyribosomes are seen apart from other organelles</em>',\r\n        'name': '09',\r\n      }\r\n    },\r\n    {\r\n      'type': 'Feature',\r\n      'id': 'pic10',\r\n      'geometry': {\r\n        'type': 'Polygon',\r\n        'coordinates': [\r\n          [\r\n            [911, 694],\r\n            [951, 694],\r\n            [951, 654],\r\n            [911, 654],\r\n            [911, 694] ] ],\r\n      },\r\n      'properties': {\r\n        'info': '<b>Filename:</b> 10_Synapses_alongDen.png<br>' +\r\n            '<em>10. Synapses along dendrite: ER tubules of different lengths and lumen width</em>',\r\n        'name': '10',\r\n      }\r\n    },\r\n    {\r\n      'type': 'Feature',\r\n      'id': 'pic11',\r\n      'geometry': {\r\n        'type': 'Polygon',\r\n        'coordinates': [\r\n          [\r\n            [1262, 520],\r\n            [1302, 520],\r\n            [1302, 480],\r\n            [1262, 480],\r\n            [1262, 520] ] ],\r\n      },\r\n      'properties': {\r\n        'info': '<b>Filename:</b> 11_Dist_dend.png<br>' +\r\n            '<em>11. Distal dendrite: Shorter branched ER tubules are present along the dendrite length distally</em>',\r\n        'name': '11',\r\n      }\r\n    },\r\n    {\r\n      'type': 'Feature',\r\n      'id': 'pic12',\r\n      'geometry': {\r\n        'type': 'Polygon',\r\n        'coordinates': [\r\n          [\r\n            [1614, 435],\r\n            [1654, 435],\r\n            [1654, 395],\r\n            [1614, 395],\r\n            [1614, 435] ] ],\r\n      },\r\n      'properties': {\r\n        'info': '<b>Filename:</b> 12_Dend_termi.png<br>' +\r\n            '<em>12. Dendrite terminal: Elongated ER sheets and tubules are seen in this region</em>',\r\n        'name': '12',\r\n      }\r\n    },\r\n   ],\r\n};\r\n\r\nvar projection = new Projection({\r\n  code: 'pixel',\r\n  units: 'pixels',\r\n  extent: upperMapExtent,\r\n  metersPerUnit: 0.103175e-6, // in um\r\n});\r\n\r\n//\r\n// Define scale to 100% control\r\n//\r\nvar Set100ProcControl = /*@__PURE__*/(function (Control) {\r\n  function Set100ProcControl(opt_options) {\r\n    var options = opt_options || {};\r\n\r\n    var button = document.createElement('button');\r\n    button.innerHTML = '1:1';\r\n\r\n    var element = document.createElement('div');\r\n    element.className = 'set-to-100proc ol-unselectable ol-control';\r\n    element.appendChild(button);\r\n\r\n    Control.call(this, {\r\n      element: element,\r\n      target: options.target,\r\n    });\r\n\r\n    button.addEventListener('click', this.handleSetTo100proc.bind(this), false);\r\n  }\r\n\r\n  if ( Control ) Set100ProcControl.__proto__ = Control;\r\n  Set100ProcControl.prototype = Object.create( Control && Control.prototype );\r\n  Set100ProcControl.prototype.constructor = Set100ProcControl;\r\n\r\n  Set100ProcControl.prototype.handleSetTo100proc = function handleSetTo100proc () {\r\n    this.getMap().getView().setResolution(1);\r\n  };\r\n\r\n  return Set100ProcControl;\r\n}(Control));\r\n\r\n// ----------------------------------------------------\r\n// Labels inside polygons and polygon styles\r\n// ----------------------------------------------------\r\n// Create text and define its style\r\nvar createTextStyle = function (feature, resolution) {\r\n  return new Text({\r\n    font: '12px Calibri,sans-serif',\r\n    fill: new Fill({color: '#fff'}),\r\n    text: feature.get('name'),\r\n  });\r\n};\r\n\r\n// polygonStyleFunction\r\nfunction polygonStyleFunction(feature, resolution) {\r\n  return new Style({\r\n    stroke: new Stroke({\r\n      color: 'red',\r\n      width: 1,\r\n    }),\r\n    fill: new Fill({\r\n      color: 'rgba(255, 0, 0, 0.1)',\r\n    }),\r\n    text: createTextStyle(feature, resolution),\r\n  });\r\n}\r\n\r\n/*\r\n// alternative style to use if text is not needed\r\n// if text is needed the lower function is used\r\nvar styles = [\r\n  //* We are using two different styles for the polygons:\r\n  //*  - The first style is for the polygons themselves.\r\n  //*  - The second style is to draw the vertices of the polygons.\r\n  //*    In a custom `geometry` function the vertices of a polygon are\r\n  //*    returned as `MultiPoint` geometry, which will be used to render\r\n  //*    the style.\r\n  new Style({\r\n    stroke: new Stroke({\r\n      color: 'blue',\r\n      width: 3,\r\n    }),\r\n    fill: new Fill({\r\n      color: 'rgba(0, 0, 255, 0.1)',\r\n    }),\r\n  }),\r\n  new Style({\r\n    image: new CircleStyle({\r\n      radius: 1,\r\n      fill: new Fill({\r\n        color: 'orange',\r\n      }),\r\n    }),\r\n    geometry: function (feature) {\r\n      // return the coordinates of the first ring of the polygon\r\n      var coordinates = feature.getGeometry().getCoordinates()[0];\r\n      return new MultiPoint(coordinates);\r\n    },\r\n  }) ];\r\n*/\r\n\r\n// define map as a static image, provide link and size of the image\r\nvar map = new Map({\r\n  controls: defaultControls().extend([new Set100ProcControl(), new ZoomToExtent(), new ScaleLine()]),\r\n  layers: [\r\n    new ImageLayer({\r\n      source: new Static({\r\n        attributions: '© <a href=\"https://www.helsinki.fi/en/infrastructures/bioimaging/embi\">EMBI</a>',\r\n        url: 'images/Neuron_ER_cartoon_V3.png',   // remember to copy images to dist manually!\r\n\t\timageSize: [2048, 1459],\r\n        projection: projection,\r\n        imageExtent: upperMapExtent,\r\n      }),\r\n    }),\r\n    /*\r\n\tnew LayerGroup({\r\n      layers: [\r\n        new ImageLayer({\r\n\t\t  source: new Static({\r\n\t\t\tattributions: '© <a href=\"https://www.helsinki.fi/en/infrastructures/bioimaging/embi\">EMBI</a>',\r\n\t\t\turl: 'images/Neuron_ER_cartoon_V3.png',   // remember to copy images to dist manually!\r\n\t\t\timageSize: [2048, 1459],\r\n\t\t\tprojection: projection,\r\n\t\t\timageExtent: upperMapExtent,\r\n\t\t  }),\r\n\t\t}),\r\n        ],\r\n    }) */\r\n\t],\r\n  target: 'map',\r\n  view: new View({\r\n    projection: projection,\r\n    center: getCenter(upperMapExtent),\r\n\t//resolution: 1,\r\n    zoom: 1,\r\n    maxZoom: 8,\r\n  }),\r\n});\r\n// fit the upper view to fit the canvas\r\nmap.getView().fit(upperMapExtent);\r\n\r\n// define layer to be displayed on the lower map view\r\nvar currentSecondLayer = '';\r\n\r\n// create a new map for the lower image\r\n// init it with the first 'pic1' in the list\r\nvar secondMapInitId = 'pic10';\r\n\r\nvar map2 = new Map({\r\n\tcontrols: defaultControls().extend([new Set100ProcControl(), new ZoomToExtent(), new ScaleLine()]),\r\n\tlayers: [\r\n      new ImageLayer({\r\n        source: new Static({\r\n          attributions: '© <a href=\"https://www.helsinki.fi/en/infrastructures/bioimaging/embi\">EMBI</a>',\r\n\t\t  url: pics[secondMapInitId].url,\r\n          imageSize: pics[secondMapInitId].imageSize,\r\n          projection: projection,\r\n          imageExtent: pics[secondMapInitId].extent,\r\n        }),\r\n      }),\r\n    ],\r\n    target: 'map2',\r\n    view: new View({\r\n\t\tprojection: new Projection({\r\n\t\t\tcode: 'pixel',\r\n\t\t\tunits: 'pixels',\r\n\t\t\textent: pics[secondMapInitId].extent,\r\n            metersPerUnit: pics[secondMapInitId].metersPerUnit,\r\n\t\t}),\r\n\t\tcenter: getCenter(pics[secondMapInitId].extent),\r\n\t\tzoom: 1,\r\n\t\tmaxZoom: 8,\r\n\t}),\r\n});  \r\n// fit the upper view to fit the canvas\r\nmap2.getView().fit(pics[secondMapInitId].extent);\r\n\r\n// function to update the map layer upon selection of a ROI in the upper map\r\nfunction updateLayer( picId ){\r\n  let extent = pics[picId].extent;\r\n  let imageSize = pics[picId].imageSize;\r\n  let metersPerUnit = pics[picId].metersPerUnit;\r\n  \r\n  // create a new layer\r\n  let newLayer = new ImageLayer({\r\n        source: new Static({\r\n          attributions: '© <a href=\"https://www.helsinki.fi/en/infrastructures/bioimaging/embi\">EMBI</a>',\r\n          url: pics[picId].url,\r\n          imageSize: imageSize,\r\n          projection: new Projection({\r\n\t\t\tcode: 'pixel',\r\n\t\t\tunits: 'pixels',\r\n\t\t\textent: extent,\r\n\t\t  }),\r\n          imageExtent: extent,\r\n        }),\r\n  });\r\n  \r\n  if (newLayer !== currentSecondLayer) {\r\n    // have to generate a new view to provide new pixel size\r\n    let view = new View({\r\n      projection: new Projection({\r\n        code: 'pixel',\r\n        units: 'pixels',\r\n        extent: pics[picId].extent,\r\n        metersPerUnit: pics[picId].metersPerUnit,\r\n      }),\r\n      center: getCenter(pics[picId].extent),\r\n      zoom: 1,\r\n      maxZoom: 8,\r\n    });\r\n\r\n   map2.addLayer(newLayer);\r\n   map2.removeLayer(currentSecondLayer);\r\n   map2.setView(view);\r\n   map2.getView().setZoom(1);\r\n   map2.getView().fit(extent);\r\n   currentSecondLayer = newLayer;\r\n  }\r\n}\r\n\r\n// Popup showing the position the user clicked\r\nvar popup = new Overlay({\r\n  element: document.getElementById('popup'),\r\n});\r\nmap.addOverlay(popup);\r\n\r\n// create feature source\r\nvar featuresSource = new GeoJSON().readFeatures(geojsonObject);\r\n\r\n// create vector source\r\nvar vectorSource = new VectorSource({\r\n  features: featuresSource,\r\n});\r\n\r\n// create vector layer and add it to map\r\nvar vectorLayer = new VectorLayer({\r\n  source: vectorSource,\r\n  //style: styles,\r\n  style: polygonStyleFunction,\r\n});\r\nmap.addLayer(vectorLayer);\r\n\r\n// add Select action to map to highlight select feature\r\nmap.addInteraction(new Select());\r\n\r\n// function to detect id of the clicked feature\r\nvar displayFeatureInfo = function (pixel) {\r\n  vectorLayer.getFeatures(pixel).then(function (features) {\r\n    var feature = features.length ? features[0] : undefined;\r\n    \r\n\tvar info = document.getElementById('info');\r\n    if (features.length) {\r\n      currentSecondLayer = updateLayer(feature.getId(), currentSecondLayer);\r\n\t  //console.log(feature.get('info'));\r\n\t  info.innerHTML = feature.get('info');\r\n\t  //info.innerHTML = feature.getId() + ': ' + feature.get('name');\r\n    } else {\r\n      //info.innerHTML = '&nbsp;';\r\n    }\r\n  });\r\n};\r\n\r\n// bind slider inputs to functions\r\nModules.setupBindInputs('#layer', map.getLayerGroup());\r\n\r\n$('#layertree li > span')\r\n  .click(function () {\r\n    $(this).siblings('fieldset').toggle();\r\n  })\r\n  .siblings('fieldset')\r\n  //.hide();\r\n\r\nmap.on('click', function (evt) {\r\n  displayFeatureInfo(evt.pixel);\r\n});\r\n\r\n\r\n\r\n// Display also a popup with coordinate info\r\n/*\r\nmap.on('click', function (evt) {\r\n  var element = popup.getElement();\r\n  var coordinate = evt.coordinate;\r\n\r\n  $(element).popover('dispose');\r\n  popup.setPosition(coordinate);\r\n  $(element).popover({\r\n    container: element,\r\n    placement: 'top',\r\n    animation: false,\r\n    html: true,\r\n    content: '<p>The location you clicked was:</p><code>' + coordinate + '</code>',\r\n  });\r\n  $(element).popover('show');\r\n  displayFeatureInfo(evt.pixel);\r\n  //console.log('coordinates: ' + coordinate);\r\n});\r\n*/\r\n\r\n","// These are additional function that are used in main.js\r\nimport LayerGroup from 'ol/layer/Group';\r\n\r\n// bind opacity and visibility inputs\r\nexport function bindInputs(layerid, layer) {\r\n    var visibilityInput = $(layerid + ' input.visible');\r\n    visibilityInput.on('change', function () {\r\n        layer.setVisible(this.checked);\r\n    });\r\n    visibilityInput.prop('checked', layer.getVisible());\r\n\r\n    var opacityInput = $(layerid + ' input.opacity');\r\n    opacityInput.on('input', function () {\r\n        layer.setOpacity(parseFloat(this.value));\r\n    });\r\n    opacityInput.val(String(layer.getOpacity()));\r\n}\r\n\r\n// setup binding of input of sliders\r\nexport function setupBindInputs(id, group) {\r\n    group.getLayers().forEach(function (layer, i) {\r\n        var layerid = id + i;\r\n        bindInputs(layerid, layer);\r\n        if (layer instanceof LayerGroup) {\r\n            setupBindInputs(layerid, layer);\r\n        }\r\n    });\r\n}"],"names":["$parcel$export","e","n","v","Object","defineProperty","get","enumerable","$43af9f7789c65e84b14491a15e43a0c0$export$default","BaseEvent","type","this","propagationStopped","target","prototype","preventDefault","stopPropagation","$0e701a707e05321d199e1da967d47fcc$export$default","Disposable","disposed","dispose","disposeInternal","$82cfb2a6316cbca0129fb8230f2fb414$export$numberSafeCompareFunction","a","b","$82cfb2a6316cbca0129fb8230f2fb414$export$includes","arr","obj","indexOf","$82cfb2a6316cbca0129fb8230f2fb414$export$linearFindNearest","direction","length","i","$82cfb2a6316cbca0129fb8230f2fb414$export$reverseSubArray","begin","end","tmp","$82cfb2a6316cbca0129fb8230f2fb414$export$extend","data","extension","Array","isArray","$82cfb2a6316cbca0129fb8230f2fb414$export$equals","arr1","arr2","len1","$34823dada93a81e2e17dadce06d5598c$export$TRUE","$34823dada93a81e2e17dadce06d5598c$export$FALSE","$34823dada93a81e2e17dadce06d5598c$export$VOID","$82e75195fd9e73a30a6c00fb298851ac$export$assign","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$82e75195fd9e73a30a6c00fb298851ac$export$clear","object","property","$82e75195fd9e73a30a6c00fb298851ac$export$getValues","values","push","$82e75195fd9e73a30a6c00fb298851ac$export$isEmpty","extendStatics","$d656e5f6a1d6558b0206dbe5f6e8b4a7$var$__extends","d","setPrototypeOf","__proto__","p","call","__","constructor","create","$d656e5f6a1d6558b0206dbe5f6e8b4a7$export$default","_super","Target","opt_target","_this","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$60bf1d465de277a2da522cb2b579fdd7$export$listen","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$60bf1d465de277a2da522cb2b579fdd7$export$listenOnce","$60bf1d465de277a2da522cb2b579fdd7$export$unlistenByKey","$e141e15044714fb2ad85b7ff315ebd1d$var$__extends","__extends","$e141e15044714fb2ad85b7ff315ebd1d$export$default","Observable","revision_","changed","getRevision","on","len","once","ol_key","un","$e141e15044714fb2ad85b7ff315ebd1d$export$unByKey","$32a37006544e2e7ca58d08b664e08542$export$abstract","Error","$32a37006544e2e7ca58d08b664e08542$var$uidCounter_","$32a37006544e2e7ca58d08b664e08542$export$getUid","ol_uid","String","$32a37006544e2e7ca58d08b664e08542$export$VERSION","$7514407de8a10bb44fd7e2d3224984e8$var$__extends","$7514407de8a10bb44fd7e2d3224984e8$export$ObjectEvent","ObjectEvent","oldValue","$7514407de8a10bb44fd7e2d3224984e8$export$default","BaseObject","opt_values","values_","setProperties","value","getKeys","getProperties","hasProperties","notify","eventType","$7514407de8a10bb44fd7e2d3224984e8$export$getChangeEventType","set","opt_silent","applyProperties","unset","$7514407de8a10bb44fd7e2d3224984e8$var$changeEventTypeCache","$4a559fe455951ad875a36065da451109$var$__extends","$4a559fe455951ad875a36065da451109$export$default","AssertionError","code","message","split","name","$0cb56514b6a9e47e693f1a21cc21ded1$export$assert","assertion","errorCode","$cbcbf5e8de58f06d73092f25d8c2f0bf$export$clamp","min","max","Math","$cbcbf5e8de58f06d73092f25d8c2f0bf$export$cosh","cosh","x","y","exp","$cbcbf5e8de58f06d73092f25d8c2f0bf$export$log2","log2","log","LOG2E","$cbcbf5e8de58f06d73092f25d8c2f0bf$export$squaredSegmentDistance","x1","y1","x2","y2","dx","dy","t","$cbcbf5e8de58f06d73092f25d8c2f0bf$export$squaredDistance","$cbcbf5e8de58f06d73092f25d8c2f0bf$export$toRadians","angleInDegrees","PI","$cbcbf5e8de58f06d73092f25d8c2f0bf$export$modulo","r","$cbcbf5e8de58f06d73092f25d8c2f0bf$export$lerp","$4b4e8725879d3cac21245680ad4cd59c$var$__extends","$4b4e8725879d3cac21245680ad4cd59c$export$default","BaseLayer","options","properties","opacity","visible","zIndex","maxResolution","Infinity","minResolution","minZoom","maxZoom","className_","className","state_","getClassName","getLayerState","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","extent","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$813c52883609dec85e8d1dd284c3e879$var$__extends","$813c52883609dec85e8d1dd284c3e879$export$default","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","map","setMap","handleSourcePropertyChange_","setSource","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","layerState","some","arrayLayerState","$c9ed7e8417623eb9945a1d31e54911fb$export$default","createRenderer","hasRenderer","$813c52883609dec85e8d1dd284c3e879$export$inView","viewState","resolution","zoom","$21d57310cff9b377d1c7a04ea675cec6$var$__extends","$21d57310cff9b377d1c7a04ea675cec6$export$default","BaseImageLayer","opt_options","$0f1de3e33b10e2776238e6582f8b3581$var$__extends","$0f1de3e33b10e2776238e6582f8b3581$export$default","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tile","tileCoord","toString","createLoadedTileFinder","projection","tileRange","callback","forEachLoadedTile","forEachFeatureAtCoordinate","coordinate","hitTolerance","matches","getDataAtPixel","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","image","imageState","load","$1975222c0d64ef5ae21e285f374b2270$var$__extends","$1975222c0d64ef5ae21e285f374b2270$export$default","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$ab105df0a655e57ef10ac3277efc3959$var$tmp_","$ab105df0a655e57ef10ac3277efc3959$export$apply","transform","$ab105df0a655e57ef10ac3277efc3959$export$compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","$ab105df0a655e57ef10ac3277efc3959$export$makeInverse","mat","det","c","f","$ab105df0a655e57ef10ac3277efc3959$export$toString","join","$138142dd9cd61cc8eaa2ab1ac5bea893$export$boundingExtent","coordinates","$138142dd9cd61cc8eaa2ab1ac5bea893$export$createEmpty","$138142dd9cd61cc8eaa2ab1ac5bea893$export$extendCoordinate","$138142dd9cd61cc8eaa2ab1ac5bea893$export$buffer","opt_extent","$138142dd9cd61cc8eaa2ab1ac5bea893$export$clone","slice","$138142dd9cd61cc8eaa2ab1ac5bea893$export$closestSquaredDistanceXY","$138142dd9cd61cc8eaa2ab1ac5bea893$export$containsCoordinate","$138142dd9cd61cc8eaa2ab1ac5bea893$export$containsXY","$138142dd9cd61cc8eaa2ab1ac5bea893$export$containsExtent","extent1","extent2","$138142dd9cd61cc8eaa2ab1ac5bea893$export$coordinateRelationship","minX","minY","maxX","maxY","relationship","$138142dd9cd61cc8eaa2ab1ac5bea893$export$createOrUpdate","$138142dd9cd61cc8eaa2ab1ac5bea893$export$createOrUpdateEmpty","$138142dd9cd61cc8eaa2ab1ac5bea893$export$createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","$138142dd9cd61cc8eaa2ab1ac5bea893$export$extendFlatCoordinates","$138142dd9cd61cc8eaa2ab1ac5bea893$export$equals","$138142dd9cd61cc8eaa2ab1ac5bea893$export$extend","$138142dd9cd61cc8eaa2ab1ac5bea893$export$extendCoordinates","$138142dd9cd61cc8eaa2ab1ac5bea893$export$extendXY","$138142dd9cd61cc8eaa2ab1ac5bea893$export$getBottomLeft","$138142dd9cd61cc8eaa2ab1ac5bea893$export$getBottomRight","$138142dd9cd61cc8eaa2ab1ac5bea893$export$getCenter","$138142dd9cd61cc8eaa2ab1ac5bea893$export$getForViewAndSize","center","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x3","y0","y3","$138142dd9cd61cc8eaa2ab1ac5bea893$export$getHeight","$138142dd9cd61cc8eaa2ab1ac5bea893$export$getIntersection","intersection","$138142dd9cd61cc8eaa2ab1ac5bea893$export$intersects","$138142dd9cd61cc8eaa2ab1ac5bea893$export$getTopLeft","$138142dd9cd61cc8eaa2ab1ac5bea893$export$getTopRight","$138142dd9cd61cc8eaa2ab1ac5bea893$export$getWidth","$138142dd9cd61cc8eaa2ab1ac5bea893$export$isEmpty","$138142dd9cd61cc8eaa2ab1ac5bea893$export$applyTransform","transformFn","opt_stops","width","height","xs","ys","l","$138142dd9cd61cc8eaa2ab1ac5bea893$var$_boundingExtentXYs","$4d3358a8c0d8e1b626c548ef466599c4$var$ua","navigator","userAgent","toLowerCase","$4d3358a8c0d8e1b626c548ef466599c4$export$FIREFOX","$4d3358a8c0d8e1b626c548ef466599c4$export$WEBKIT","$4d3358a8c0d8e1b626c548ef466599c4$export$MAC","$4d3358a8c0d8e1b626c548ef466599c4$export$DEVICE_PIXEL_RATIO","devicePixelRatio","$4d3358a8c0d8e1b626c548ef466599c4$export$WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","$4d3358a8c0d8e1b626c548ef466599c4$export$IMAGE_DECODE","Image","decode","$4d3358a8c0d8e1b626c548ef466599c4$export$PASSIVE_EVENT_LISTENERS","passive","window","error","$64187cb566c3472f47833e508923e276$export$createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","shift","document","createElement","getContext","$64187cb566c3472f47833e508923e276$export$outerWidth","element","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","$64187cb566c3472f47833e508923e276$export$outerHeight","offsetHeight","marginTop","marginBottom","$64187cb566c3472f47833e508923e276$export$replaceNode","newNode","oldNode","parent","parentNode","replaceChild","$64187cb566c3472f47833e508923e276$export$removeNode","node","removeChild","$64187cb566c3472f47833e508923e276$export$removeChildren","lastChild","$18142d5e5bb9adf49075e6d607952676$export$CLASS_HIDDEN","$18142d5e5bb9adf49075e6d607952676$export$CLASS_UNSELECTABLE","$18142d5e5bb9adf49075e6d607952676$export$CLASS_CONTROL","$18142d5e5bb9adf49075e6d607952676$export$CLASS_COLLAPSED","$18142d5e5bb9adf49075e6d607952676$var$fontRegEx","RegExp","$18142d5e5bb9adf49075e6d607952676$var$fontRegExMatchIndex","$18142d5e5bb9adf49075e6d607952676$export$getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","$3a3d6b8714418dc86f8518a8ff4fec4b$export$defaultFont","$3a3d6b8714418dc86f8518a8ff4fec4b$export$defaultFillStyle","$3a3d6b8714418dc86f8518a8ff4fec4b$export$defaultLineCap","$3a3d6b8714418dc86f8518a8ff4fec4b$export$defaultLineDash","$3a3d6b8714418dc86f8518a8ff4fec4b$export$defaultLineJoin","$3a3d6b8714418dc86f8518a8ff4fec4b$export$defaultStrokeStyle","$3a3d6b8714418dc86f8518a8ff4fec4b$export$defaultTextAlign","$3a3d6b8714418dc86f8518a8ff4fec4b$export$defaultTextBaseline","$3a3d6b8714418dc86f8518a8ff4fec4b$export$defaultPadding","$3a3d6b8714418dc86f8518a8ff4fec4b$export$checkedFonts","$3a3d6b8714418dc86f8518a8ff4fec4b$export$labelCache","setSize","console","warn","$3a3d6b8714418dc86f8518a8ff4fec4b$var$measureFont","div","$3a3d6b8714418dc86f8518a8ff4fec4b$var$measureContext","$3a3d6b8714418dc86f8518a8ff4fec4b$export$textHeights","$3a3d6b8714418dc86f8518a8ff4fec4b$export$registerFont","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$3a3d6b8714418dc86f8518a8ff4fec4b$export$measureTextWidth","check","done","fonts","font","clearInterval","setInterval","$3a3d6b8714418dc86f8518a8ff4fec4b$export$measureTextHeight","metrics","$3a3d6b8714418dc86f8518a8ff4fec4b$var$measureText","isNaN","Number","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","margin","padding","position","left","body","appendChild","measureText","$3a3d6b8714418dc86f8518a8ff4fec4b$export$measureAndCacheTextWidth","cache","$3a3d6b8714418dc86f8518a8ff4fec4b$export$rotateAtOffset","offsetX","offsetY","translate","rotate","$3a3d6b8714418dc86f8518a8ff4fec4b$export$drawImageOrLabel","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","label","$3a3d6b8714418dc86f8518a8ff4fec4b$var$executeLabelInstructions","drawImage","restore","$3a3d6b8714418dc86f8518a8ff4fec4b$var$createTransformStringCanvas","$a592acc526a8fd037c905a11c2836538$var$__extends","$a592acc526a8fd037c905a11c2836538$export$default","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","containerReused","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clip","pixelRatio","halfWidth","halfHeight","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","beginPath","moveTo","lineTo","clipUnrotated","inverted","dispatchRenderEvent_","event_1","preRender","postRender","getRenderTransform","renderPixel","layerExtent","renderCoordinate","pixelToCoordinateTransform","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$ab4ff689b4b47b75d38889db9ca564ac$export$default","$ab4ff689b4b47b75d38889db9ca564ac$export$METERS_PER_UNIT","$022900404af247af89ff4a53f0056175$export$default","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$879fd51c566cc41e6e6dba726c529a28$var$__extends","$879fd51c566cc41e6e6dba726c529a28$export$RADIUS","$879fd51c566cc41e6e6dba726c529a28$export$HALF_SIZE","$879fd51c566cc41e6e6dba726c529a28$export$EXTENT","$879fd51c566cc41e6e6dba726c529a28$export$WORLD_EXTENT","$879fd51c566cc41e6e6dba726c529a28$export$MAX_SAFE_Y","tan","$879fd51c566cc41e6e6dba726c529a28$var$EPSG3857Projection","EPSG3857Projection","point","$879fd51c566cc41e6e6dba726c529a28$export$PROJECTIONS","$879fd51c566cc41e6e6dba726c529a28$export$fromEPSG4326","input","opt_output","opt_dimension","dimension","$879fd51c566cc41e6e6dba726c529a28$export$toEPSG4326","atan","$a27fc5be2615061b50c48caa968b4be2$var$__extends","$a27fc5be2615061b50c48caa968b4be2$export$EXTENT","$a27fc5be2615061b50c48caa968b4be2$export$METERS_PER_UNIT","$a27fc5be2615061b50c48caa968b4be2$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$a27fc5be2615061b50c48caa968b4be2$export$PROJECTIONS","$173c2f4fb038ffd556d42b6d0d63ecf7$var$cache","$33daaa4f5eb2d245e3dc28ff0fff8fe5$var$transforms","$33daaa4f5eb2d245e3dc28ff0fff8fe5$export$add","destination","sourceCode","destinationCode","$5c6fc1b985aa8105e4e44e6b355e6a66$export$DEFAULT_RADIUS","$5c6fc1b985aa8105e4e44e6b355e6a66$export$getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$1d12b0544be0fd38d36d002ebd0146de$export$equals","coordinate1","coordinate2","equals","$1d12b0544be0fd38d36d002ebd0146de$export$rotate","cosAngle","sinAngle","$1d12b0544be0fd38d36d002ebd0146de$export$wrapX","worldWidth","worldsAway","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$1d12b0544be0fd38d36d002ebd0146de$export$getWorldsAway","$b18f054df6f7d19e0d9674fd4b809b44$export$cloneTransform","$b18f054df6f7d19e0d9674fd4b809b44$export$identityTransform","$b18f054df6f7d19e0d9674fd4b809b44$export$addProjection","$b18f054df6f7d19e0d9674fd4b809b44$export$get","projectionLike","replace","$b18f054df6f7d19e0d9674fd4b809b44$export$getPointResolution","opt_units","pointResolution","getter","toEPSG4326_1","$b18f054df6f7d19e0d9674fd4b809b44$export$getTransformFromProjections","vertices","$b18f054df6f7d19e0d9674fd4b809b44$export$addEquivalentProjections","projections","forEach","$b18f054df6f7d19e0d9674fd4b809b44$export$addProjections","$b18f054df6f7d19e0d9674fd4b809b44$export$createProjection","defaultCode","$b18f054df6f7d19e0d9674fd4b809b44$export$equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$b18f054df6f7d19e0d9674fd4b809b44$export$getTransform","$b18f054df6f7d19e0d9674fd4b809b44$export$transform","$b18f054df6f7d19e0d9674fd4b809b44$export$transformExtent","projections2","forwardTransform","inverseTransform","$b18f054df6f7d19e0d9674fd4b809b44$var$userProjection","$b18f054df6f7d19e0d9674fd4b809b44$export$getUserProjection","$b18f054df6f7d19e0d9674fd4b809b44$export$toUserCoordinate","$b18f054df6f7d19e0d9674fd4b809b44$export$fromUserCoordinate","destProjection","$b18f054df6f7d19e0d9674fd4b809b44$export$toUserExtent","$b18f054df6f7d19e0d9674fd4b809b44$export$fromUserExtent","$b18f054df6f7d19e0d9674fd4b809b44$export$addEquivalentTransforms","$0dbd170a92281043bb30f7bfd3ee75e5$var$__extends","$0dbd170a92281043bb30f7bfd3ee75e5$export$default","CanvasImageLayerRenderer","imageLayer","image_","getImage","layerIndex","viewResolution","imageSource","hints","viewHints","renderedExtent","INTERACTING","imageExtent","imageResolution","getResolution","imagePixelRatio","getPixelRatio","viewCenter","size_1","canvasTransform","clipped","img","dw","dh","getContextOptions","previousAlpha","$127f86be49eba27766fef0cc5b8f3764$var$__extends","$127f86be49eba27766fef0cc5b8f3764$export$default","ImageLayer","$f90518f5b8fc689341eca7173aa8e195$var$HEX_COLOR_RE_","$f90518f5b8fc689341eca7173aa8e195$var$NAMED_COLOR_RE_","$f90518f5b8fc689341eca7173aa8e195$export$asString","color","$f90518f5b8fc689341eca7173aa8e195$export$toString","cacheSize","$f90518f5b8fc689341eca7173aa8e195$export$fromString","s","MAX_CACHE_SIZE","g","exec","el","rgb","$f90518f5b8fc689341eca7173aa8e195$var$fromNamed","hasAlpha","substr","$f90518f5b8fc689341eca7173aa8e195$export$normalize","$f90518f5b8fc689341eca7173aa8e195$var$fromStringInternal_","$f90518f5b8fc689341eca7173aa8e195$export$asArray","$fbdf369f23daf54b2ec8a154c7d64dfe$var$getKey","src","crossOrigin","$fbdf369f23daf54b2ec8a154c7d64dfe$export$shared","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","maxCacheSize","$818a1a4ac7b315a44c82e726b0bbfdc0$var$__extends","$818a1a4ac7b315a44c82e726b0bbfdc0$export$default","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","tmpCoord","j","getWrapX","callback_1","order","m","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$818a1a4ac7b315a44c82e726b0bbfdc0$var$expireIconCache","$8d389035154b68e07a8f61026459f938$var$__extends","$8d389035154b68e07a8f61026459f938$export$default","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers","previousElement","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","display","$9e33b27dcef8245fec584e115cf64984$var$__extends","$9e33b27dcef8245fec584e115cf64984$var$Property","$9e33b27dcef8245fec584e115cf64984$export$CollectionEvent","CollectionEvent","opt_element","opt_index","$9e33b27dcef8245fec584e115cf64984$export$default","Collection","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$39e96e1c46db24497bd36bd3a9242fb7$var$__extends","$39e96e1c46db24497bd36bd3a9242fb7$var$Property","$39e96e1c46db24497bd36bd3a9242fb7$export$default","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","id","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","$6a3f14598ee5c83e013778d445aa3a5b$var$__extends","$6a3f14598ee5c83e013778d445aa3a5b$export$default","MapEvent","$a0af09f6a7235eb2f1573289a3337256$var$__extends","$a0af09f6a7235eb2f1573289a3337256$export$default","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","getEventPixel","configurable","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$91a94b72ce22a604de1a663b1522b3fe$var$__extends","$91a94b72ce22a604de1a663b1522b3fe$export$default","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","setTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","defaultPrevented","abs","clientX","clientY","$7ef5089b9eac436787cb8f6c7d9f3a39$export$DROP","$7ef5089b9eac436787cb8f6c7d9f3a39$export$default","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$6e1f5d35d13ffdd357e8777e93b0c6a8$var$__extends","$6e1f5d35d13ffdd357e8777e93b0c6a8$export$default","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","hifi","EMPTY","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","$6e1f5d35d13ffdd357e8777e93b0c6a8$export$getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","$94c884b9265b404bbfbd10208af20194$export$createExtent","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$94c884b9265b404bbfbd10208af20194$export$none","$e50640e427d649c577f09f9fa0651801$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$e50640e427d649c577f09f9fa0651801$var$getSmoothClampedResolution","$e50640e427d649c577f09f9fa0651801$export$createMinMaxResolution","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$c786662c19602722a72d1926687cb781$export$disable","$c786662c19602722a72d1926687cb781$export$none","$1c66f9783903fa50d1675561f930ac4f$export$easeOut","pow","$1c66f9783903fa50d1675561f930ac4f$export$easeIn","$1c66f9783903fa50d1675561f930ac4f$export$inAndOut","$1c66f9783903fa50d1675561f930ac4f$export$linear","$665daeb75a66fe1783f896a3bc7b94b3$export$transform2D","opt_dest","dest","$665daeb75a66fe1783f896a3bc7b94b3$export$rotate","anchor","anchorX","anchorY","k","$8a936505f11538bdaf591957e00c6e74$var$__extends","$8a936505f11538bdaf591957e00c6e74$var$tmpTransform","$8a936505f11538bdaf591957e00c6e74$export$default","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","applyTransform","nextArgs","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$a394c56904c654befc6b798f0d80e72a$var$__extends","$a394c56904c654befc6b798f0d80e72a$export$default","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$a394c56904c654befc6b798f0d80e72a$export$getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","$a394c56904c654befc6b798f0d80e72a$var$getLayoutForStride","$a394c56904c654befc6b798f0d80e72a$export$transformGeom2D","simpleGeometry","$d2b456f2608a7837fe0cd99c72489479$var$assignClosest","offset1","offset2","$d2b456f2608a7837fe0cd99c72489479$export$maxSquaredDelta","squaredDelta","$d2b456f2608a7837fe0cd99c72489479$export$arrayMaxSquaredDelta","ends","$d2b456f2608a7837fe0cd99c72489479$export$assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$d2b456f2608a7837fe0cd99c72489479$export$assignClosestArrayPoint","$d72c28ee1305bc106663392aa0605ee3$export$deflateCoordinates","$d72c28ee1305bc106663392aa0605ee3$export$deflateCoordinatesArray","coordinatess","opt_ends","jj","$e2ffdbccad29441c85244080000d83a8$export$douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$e2ffdbccad29441c85244080000d83a8$export$snap","$e2ffdbccad29441c85244080000d83a8$export$quantize","$e2ffdbccad29441c85244080000d83a8$export$quantizeArray","simplifiedEnds","$7fdffc0888603a8e6ed152c1599b0ea5$export$inflateCoordinates","opt_coordinates","$7fdffc0888603a8e6ed152c1599b0ea5$export$inflateCoordinatesArray","opt_coordinatess","$7fdffc0888603a8e6ed152c1599b0ea5$export$inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","$1ca823e5cd0a8ecc55eafb438ee85913$export$linearRing","twiceArea","$1ca823e5cd0a8ecc55eafb438ee85913$export$linearRings","area","$10809f0ae71db93ac3537efc5dbd0533$var$__extends","$10809f0ae71db93ac3537efc5dbd0533$export$default","LinearRing","maxDelta_","maxDeltaRevision_","getArea","$719a409f628fbb2fcde9bae7ab163205$var$__extends","$719a409f628fbb2fcde9bae7ab163205$export$default","Point","$ab0807d6aa49557f636a814ddae03d25$export$linearRingContainsExtent","val","outside","$ab0807d6aa49557f636a814ddae03d25$export$linearRingContainsXY","wn","$ab0807d6aa49557f636a814ddae03d25$export$linearRingsContainsXY","$5cc21c3aadfe9efc3870b554b7893809$export$getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$bd7023fee8d6eefcb7e588519052315d$export$forEach","ret","point1","point2","$0f33d00fd48e6f7bf83347f30cd5269e$export$intersectsLineString","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$0f33d00fd48e6f7bf83347f30cd5269e$export$intersectsLinearRingArray","$0f33d00fd48e6f7bf83347f30cd5269e$export$intersectsLinearRing","$8222958cfc507713221cc4cf0f0c24a8$export$coordinates","$23e5832e9a85155fa3c11486cc08e597$export$linearRingIsClockwise","edge","$23e5832e9a85155fa3c11486cc08e597$export$linearRingsAreOriented","opt_right","right","isClockwise","$23e5832e9a85155fa3c11486cc08e597$export$orientLinearRings","$23e5832e9a85155fa3c11486cc08e597$export$orientLinearRingsArray","$efa5c7b55b042f2d4d1ccdcd24649c78$var$__extends","$efa5c7b55b042f2d4d1ccdcd24649c78$export$default","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","$efa5c7b55b042f2d4d1ccdcd24649c78$export$fromExtent","XY","$9e6f844894104df00dbfdb5d1a4717c8$var$__extends","$9e6f844894104df00dbfdb5d1a4717c8$export$default","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","constraint","$9e6f844894104df00dbfdb5d1a4717c8$export$createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","$9e6f844894104df00dbfdb5d1a4717c8$export$createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","$9e6f844894104df00dbfdb5d1a4717c8$export$createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","$9e6f844894104df00dbfdb5d1a4717c8$var$animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$9e6f844894104df00dbfdb5d1a4717c8$export$isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getCenter","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","getViewportSizeMinusPadding_","reducedSize","$9e6f844894104df00dbfdb5d1a4717c8$var$calculateCenterOn","nearest","baseLevel","fit","geometryOrExtent","CIRCLE","userProjection","fitInternal","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRotX","centerRotY","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","CENTER","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","$d4f4117934036f4c407bcf2d4fdc3e85$export$toSize","$fac5645a10902b1d03dc6a470c695960$var$__extends","$fac5645a10902b1d03dc6a470c695960$export$default","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$fac5645a10902b1d03dc6a470c695960$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","getId","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","KEYDOWN","rootNode","elementFromPoint","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","lowOnFrameBudget","time","targetElement","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","setLayerGroup","setView","computedStyle","parseFloat","$85d268df6eea6e8befcebcd2dec9ac4b$var$__extends","$85d268df6eea6e8befcebcd2dec9ac4b$export$default","Control","target_","listenerKeys","mapEvent","$bc4e5b4322bcc19c18fc1cf50e6fd3a5$var$__extends","$bc4e5b4322bcc19c18fc1cf50e6fd3a5$export$default","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$e978c56cd826879af776b955a2f7eabd$var$__extends","$e978c56cd826879af776b955a2f7eabd$export$default","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","$2ec5884c67e3cd62463fd48f1a59cb42$var$__extends","$2ec5884c67e3cd62463fd48f1a59cb42$export$default","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","$5c1e2babcd240404d6b78ccc9fb5aad0$var$__extends","$5c1e2babcd240404d6b78ccc9fb5aad0$export$default","ZoomToExtent","handleZoomToExtent","$962e4b1a523669a43ed12a2e2b9196ec$export$defaults","zoomOptions","rotateOptions","attribution","attributionOptions","$f891d52f44f491ce4db727dcae5e713a$var$__extends","$f891d52f44f491ce4db727dcae5e713a$export$default","Interaction","setActive","active","$f891d52f44f491ce4db727dcae5e713a$export$pan","$f891d52f44f491ce4db727dcae5e713a$export$zoomByDelta","$13b40e5f9682b1e3e8ff95a7a6c2613e$var$__extends","$13b40e5f9682b1e3e8ff95a7a6c2613e$export$default","DoubleClickZoom","delta_","stopEvent","shiftKey","$ed97f10f63a573b7d8c6b44c6c84c7fa$var$__extends","$ed97f10f63a573b7d8c6b44c6c84c7fa$export$default","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","$ed97f10f63a573b7d8c6b44c6c84c7fa$var$isPointerDraggingEvent","$ed97f10f63a573b7d8c6b44c6c84c7fa$export$centroid","$f85eaf772b3fcb62f5fe98dad1207f76$export$all","conditions","pass","$f85eaf772b3fcb62f5fe98dad1207f76$export$altShiftKeysOnly","altKey","metaKey","ctrlKey","$f85eaf772b3fcb62f5fe98dad1207f76$export$focusWithTabindex","hasAttribute","activeElement","$f85eaf772b3fcb62f5fe98dad1207f76$export$focus","$f85eaf772b3fcb62f5fe98dad1207f76$export$always","$f85eaf772b3fcb62f5fe98dad1207f76$export$mouseActionButton","$f85eaf772b3fcb62f5fe98dad1207f76$export$never","$f85eaf772b3fcb62f5fe98dad1207f76$export$singleClick","$f85eaf772b3fcb62f5fe98dad1207f76$export$noModifierKeys","$f85eaf772b3fcb62f5fe98dad1207f76$export$shiftKeyOnly","$f85eaf772b3fcb62f5fe98dad1207f76$export$targetNotEditable","tagName","$f85eaf772b3fcb62f5fe98dad1207f76$export$mouseOnly","pointerType","$f85eaf772b3fcb62f5fe98dad1207f76$export$primaryAction","isPrimary","$be45899c0c5b0ba36a4cc91f4f2e0f17$var$__extends","$be45899c0c5b0ba36a4cc91f4f2e0f17$export$default","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","update","distance","getDistance","getAngle","centerpx","$4b6d082bc5b954fb52c24f0592d4695f$var$__extends","$4b6d082bc5b954fb52c24f0592d4695f$export$default","DragRotate","lastAngle_","$e29d81babfc3f991eb275ddf3f9881b9$var$__extends","$e29d81babfc3f991eb275ddf3f9881b9$export$default","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","pixels","getGeometry","$02c5a22803e532282d612b44e2bd4141$var$__extends","$02c5a22803e532282d612b44e2bd4141$var$DragBoxEventType","$02c5a22803e532282d612b44e2bd4141$export$DragBoxEvent","DragBoxEvent","$02c5a22803e532282d612b44e2bd4141$export$default","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$1afae84879a4c1bc21c6305ebb5c489e$var$__extends","$1afae84879a4c1bc21c6305ebb5c489e$export$default","DragZoom","out_","out","mapExtent","boxPixelExtent","$dc3751b166efb10ba6e56af08ada6889$var$__extends","$dc3751b166efb10ba6e56af08ada6889$export$default","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","UP","mapUnitsDelta","$039bca7633fc2d93a57b2db27b6a196a$var$__extends","$039bca7633fc2d93a57b2db27b6a196a$export$default","KeyboardZoom","KEYPRESS","charCode","charCodeAt","$a1171690a4e653351a66127fa49f6d22$export$default","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$0e3b56c669ad3b9567559e6907d0e7c1$var$__extends","$0e3b56c669ad3b9567559e6907d0e7c1$export$Mode","$0e3b56c669ad3b9567559e6907d0e7c1$export$default","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$cec25146906229beac94eff4dd25d389$var$__extends","$cec25146906229beac94eff4dd25d389$export$default","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","$4ba85df528dd5cd195ff8496ab75948b$var$__extends","$4ba85df528dd5cd195ff8496ab75948b$export$default","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","$d203c00fa216d5fe979fa88a3b95c2dd$export$default","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$8a7788c678ec8bcd9ed83da80e54a67c$export$asColorLike","$ed55443025d1080fe08ae25f08c7a4e5$var$__extends","$ed55443025d1080fe08ae25f08c7a4e5$export$default","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","getFill","getPoints","getRadius","getRadius2","getStroke","renderOptions","createRenderOptions","createHitDetectionCanvas_","draw_","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","imageSize","angle0","radiusC","arc","fillStyle","lineWidth","setLineDash","closePath","drawHitDetectionCanvas_","$6d341e20da2241a0ad1546402d359a77$var$__extends","$6d341e20da2241a0ad1546402d359a77$export$default","CircleStyle","setRadius","$5dfa42bae93156b7c41295c8a29d7c75$export$default","Fill","color_","setColor","$55d8a0798e30da4d8a2ca2297f3e651d$export$default","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$c67da0fe26ea5cd27dd05d04141f67ad$export$default","Style","geometryFunction_","$c67da0fe26ea5cd27dd05d04141f67ad$var$defaultGeometryFunction","setGeometry","renderer","text_","zIndex_","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$c67da0fe26ea5cd27dd05d04141f67ad$var$defaultStyles","$c67da0fe26ea5cd27dd05d04141f67ad$export$createDefaultStyle","$6fc4bcdb9705ab070626f8ef82153931$var$__extends","$6fc4bcdb9705ab070626f8ef82153931$var$SelectEventType","$6fc4bcdb9705ab070626f8ef82153931$export$SelectEvent","SelectEvent","selected","deselected","$6fc4bcdb9705ab070626f8ef82153931$var$originalFeatureStyles","$6fc4bcdb9705ab070626f8ef82153931$export$default","Select","styles","boundAddFeature_","addFeature_","boundRemoveFeature_","removeFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","style_","white","blue","POLYGON","LINE_STRING","concat","POINT","features_","layers_1","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","getStyle","setStyle","lastIndexOf","removeFeatureLayerAssociation_","$2b5e14c02a53bf95878eaa59b61e1cc3$export$defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","$7984d51a6a656bc3cbca89d17379c20e$var$__extends","$7984d51a6a656bc3cbca89d17379c20e$export$default","Map","$fed3f303c54c47fcf828f47b9fcd1a51$var$__extends","$fed3f303c54c47fcf828f47b9fcd1a51$export$default","ImageBase","$d4d8673f2e880711380b35e67ca0497f$var$brokenDiagonalRendering_","$1df6b676bbb2f0f8cd67dc81322c2064$export$default","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetCoverageX","targetQuadExtent","isFinite","isNotFinite","centerSrc","centerSrcEstimX","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$7b860b67c9afa642111be1d298469c75$export$IMAGE_SMOOTHING_DISABLED","imageSmoothingEnabled","msImageSmoothingEnabled","$d4d8673f2e880711380b35e67ca0497f$var$drawTestTriangle","ctx","u1","v1","u2","v2","fillRect","$d4d8673f2e880711380b35e67ca0497f$var$verifyBrokenDiagonalRendering","$d4d8673f2e880711380b35e67ca0497f$export$render","sourceExtent","triangulation","sources","gutter","opt_renderEdges","opt_contextOptions","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","augmentedMatrix","$d4d8673f2e880711380b35e67ca0497f$var$isBrokenDiagonalRendering","ud","vd","step","steps","$1fe04ac47b7eb5d35673ec8bd59f47e4$var$__extends","$1fe04ac47b7eb5d35673ec8bd59f47e4$export$default","ReprojImage","getImageFunction","maxTargetExtent","limitedTargetExtent","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","sourceImage","IDLE","sourcePixelRatio","triangulation_","targetExtent_","sourceImage_","sourcePixelRatio_","contextOptions_","sourceListenerKey_","unlistenSource_","reproject_","LOADED","$edab2ceda4fdf5ed921bdba8b6137fe2$var$__extends","$edab2ceda4fdf5ed921bdba8b6137fe2$export$default","Source","attributions_","$edab2ceda4fdf5ed921bdba8b6137fe2$var$adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","setState","attributionLike","$12d2a0944b787cb784f1248ccee66e66$var$__extends","$12d2a0944b787cb784f1248ccee66e66$export$ImageSourceEventType","$12d2a0944b787cb784f1248ccee66e66$export$ImageSourceEvent","ImageSourceEvent","$12d2a0944b787cb784f1248ccee66e66$export$default","ImageSource","reprojectedImage_","reprojectedRevision_","imageSmoothing","findNearestResolution","idx","getImageInternal","handleImageChange","$12d2a0944b787cb784f1248ccee66e66$export$defaultImageLoadFunction","$6335c9970c849adf2e6102bb07c6be09$var$__extends","$6335c9970c849adf2e6102bb07c6be09$export$default","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","$6335c9970c849adf2e6102bb07c6be09$export$listenImage","loadHandler","errorHandler","promise","listening_1","then","catch","$1f91e6817be4fd12264caa13e1c7836a$var$__extends","$1f91e6817be4fd12264caa13e1c7836a$export$default","Static","url_","url","imageExtent_","getImageExtent","getUrl","imageWidth","imageHeight","targetWidth","$3d9aba4f315e28866434c02e789697ba$var$__extends","$3d9aba4f315e28866434c02e789697ba$var$Property","$3d9aba4f315e28866434c02e789697ba$export$default","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","opt_panIntoViewOptions","mapRect","getRect","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","msTransform","getOptions","$aef0abbe1b8cd7bbdfb054c30a9fff6c$var$__extends","$aef0abbe1b8cd7bbdfb054c30a9fff6c$export$default","Feature","opt_geometryOrProperties","id_","geometryName_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","getStyleFunction","handleGeometryChange_","opt_style","styles_1","$aef0abbe1b8cd7bbdfb054c30a9fff6c$export$createStyleFunction","setId","$c76603888980e600da4ba525eeac6184$var$__extends","$c76603888980e600da4ba525eeac6184$var$taintedTestContext","$c76603888980e600da4ba525eeac6184$export$default","IconImage","hitDetectionImage_","imageState_","tainted_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","$c76603888980e600da4ba525eeac6184$export$get","$588da720bcfdcce3947ad12e04457864$var$__extends","$588da720bcfdcce3947ad12e04457864$export$default","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","FRACTION","TOP_LEFT","setAnchor","iconImageSize","$3f12b9e16da2024b762dae9083c7d864$export$default","Text","font_","textAlign_","textAlign","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","o","u","_maxEntries","_minEntries","leaf","all","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","M","_allDistMargin","$1b28867acaf56c3ed9b30981272f23bb$exports","RBush","__esModule","default","$ecdf0386df785312fbf01c2318810bc6$export$default","opt_maxEntries","rbush_","items_","extents","items","uid","bbox","getAll","getInExtent","forEach_","forEachInExtent","rbush","$3f41602d0a773c39dc0ec631c9c07a9e$export$all","$0bb64c7fec78dbdbb59231c9132861fc$export$xhr","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$0bb64c7fec78dbdbb59231c9132861fc$export$loadFeaturesXhr","dataProjection","addFeatures","$d9204b26ff7b6370d1d0e11c397d570b$var$__extends","$d9204b26ff7b6370d1d0e11c397d570b$export$VectorSourceEvent","VectorSourceEvent","opt_feature","opt_features","$d9204b26ff7b6370d1d0e11c397d570b$export$default","VectorSource","loader_","format_","overlaps_","overlaps","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$acd37a8b2fdd9ecc89df9849c3669605$var$__extends","$acd37a8b2fdd9ecc89df9849c3669605$var$Property","$acd37a8b2fdd9ecc89df9849c3669605$export$default","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","$6171afb74079d5a258c7c370d78dce10$export$default","$6171afb74079d5a258c7c370d78dce10$export$fillInstruction","$6171afb74079d5a258c7c370d78dce10$export$strokeInstruction","$6171afb74079d5a258c7c370d78dce10$export$beginPathInstruction","$6171afb74079d5a258c7c370d78dce10$export$closePathInstruction","$e5fcbed36b08b7af38a03f121f4b499b$export$default","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$c4281275c5c7c82c7e6e21088a4ca93d$var$__extends","$c4281275c5c7c82c7e6e21088a4ca93d$export$default","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","MULTI_POLYGON","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$b44af3fe88717322d3835ff06f37744f$var$__extends","$b44af3fe88717322d3835ff06f37744f$export$default","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","opt_sharedData","hitDetectionImage","origin","$3c10184141c3bd41c38eb429f236428f$var$__extends","$3c10184141c3bd41c38eb429f236428f$export$default","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$eb68e50d007cdbc2c924a5621b78bdab$var$__extends","$eb68e50d007cdbc2c924a5621b78bdab$export$default","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","SET_FILL_STYLE","circleInstruction","$76167c231a3e026a506b94253c3edf5e$export$matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$b17f6db455ba74cf87fdb84b85f6980b$var$__extends","$b17f6db455ba74cf87fdb84b85f6980b$export$TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","$b17f6db455ba74cf87fdb84b85f6980b$export$default","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","saveTextStates_","p0","p1","p2","p3","pixelRatio_1","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","$ba2cb8b01fbabf8a63f8fc5273bdf81e$var$BATCH_CONSTRUCTORS","Circle","$eb68e50d007cdbc2c924a5621b78bdab$exports","Default","$c4281275c5c7c82c7e6e21088a4ca93d$exports","$b44af3fe88717322d3835ff06f37744f$exports","LineString","$3c10184141c3bd41c38eb429f236428f$exports","$b17f6db455ba74cf87fdb84b85f6980b$exports","$ba2cb8b01fbabf8a63f8fc5273bdf81e$export$default","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$c45cc8ce9342c9dbf92820d78c50a448$export$drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","previousAngle_1","iStart","charLength","chars","substring","$8e606a9f16c5ffbcfa82577f229d7cb5$export$lineStringLength","$e83162416d24a82310d268cc425685cf$var$tmpExtent","$e83162416d24a82310d268cc425685cf$var$p1","$e83162416d24a82310d268cc425685cf$var$p2","$e83162416d24a82310d268cc425685cf$var$p3","$e83162416d24a82310d268cc425685cf$var$p4","$e83162416d24a82310d268cc425685cf$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$e83162416d24a82310d268cc425685cf$var$rtlRegEx","fromCharCode","$e83162416d24a82310d268cc425685cf$var$horizontalTextAlign","align","test","$e83162416d24a82310d268cc425685cf$export$default","Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","renderWidth","Context","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","dd","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$40f5d08d9ce5267e139e289bc6474fe9$var$ORDER","IMAGE","TEXT","$40f5d08d9ce5267e139e289bc6474fe9$export$default","ExecutorGroup","allInstructions","opt_renderBuffer","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$40f5d08d9ce5267e139e289bc6474fe9$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$40f5d08d9ce5267e139e289bc6474fe9$export$getPixelIndexArray","featureCallback","imageData","result_1","executor","zs","opt_builderTypes","builderTypes","$e240642f8ff22ae6c4762d2509d65259$var$__extends","$e240642f8ff22ae6c4762d2509d65259$export$default","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","alpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$2947ea8bd3f1adc79bcdd7d3b96a90c9$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","$2947ea8bd3f1adc79bcdd7d3b96a90c9$export$defaultOrder","feature1","feature2","$2947ea8bd3f1adc79bcdd7d3b96a90c9$export$getTolerance","$2947ea8bd3f1adc79bcdd7d3b96a90c9$export$renderFeature","$2947ea8bd3f1adc79bcdd7d3b96a90c9$var$renderGeometry","$2947ea8bd3f1adc79bcdd7d3b96a90c9$var$renderFeatureInternal","getGeometries","$1276aa058a89be492c4a512620b25a3a$var$__extends","$1276aa058a89be492c4a512620b25a3a$export$default","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","renderWorlds","executorGroup","vectorSource","endWorld","world","Promise","resolve","transforms","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","canvas_1","imgContext","iconContext","byGeometryType","zIndexKeys","geomAndStyle","kk","resultFeatures","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","declutterBuilderGroup","userTransform","dirty","renderFeature","userExtent","replayGroupInstructions","$a3bffddbb68c6877336ba272c7b5bfe5$var$__extends","$a3bffddbb68c6877336ba272c7b5bfe5$export$default","VectorLayer","$25e0d59066349a337a0dac721796ac24$var$__extends","$25e0d59066349a337a0dac721796ac24$export$default","appendPoint","multiPoint","getPoint","$1bc07ecf01c41336bcb91d48170fcc6f$var$__extends","$1bc07ecf01c41336bcb91d48170fcc6f$export$default","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","$1bc07ecf01c41336bcb91d48170fcc6f$var$cloneGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","$2dcb6665fa696199d7798118428130b4$export$default","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","$2dcb6665fa696199d7798118428130b4$export$transformGeometryWithOptions","write","transformed","decimals","power_1","$1dabd81053bb4530471fee0ac6ece016$var$__extends","$1dabd81053bb4530471fee0ac6ece016$export$default","JSONFeature","readFeatureFromObject","$1dabd81053bb4530471fee0ac6ece016$var$getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","$4518dc08b5d9a34e144cb241569673db$export$interpolatePoint","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$4518dc08b5d9a34e144cb241569673db$export$lineStringCoordinateAtM","extrapolate","lo","hi","m0","$a070536003f6396d3f1d30ff8b72e956$var$__extends","$a070536003f6396d3f1d30ff8b72e956$export$default","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","$19ad9ac108a6bb8b61ea28d6bb27bd29$var$__extends","$19ad9ac108a6bb8b61ea28d6bb27bd29$export$default","lineStrings","appendLineString","multiLineString","opt_interpolate","getLineString","getLineStrings","midpoints","midpoint","$5084fe6b692e28e86b13a8bbce2b687a$var$__extends","$5084fe6b692e28e86b13a8bbce2b687a$export$default","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiPolygon","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","$875966eed124f71792630d0e3dbe6d32$var$__extends","$875966eed124f71792630d0e3dbe6d32$export$default","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","$875966eed124f71792630d0e3dbe6d32$var$readGeometry","geoJSONFeatures","crs","$875966eed124f71792630d0e3dbe6d32$var$writeGeometry","objects","$875966eed124f71792630d0e3dbe6d32$var$readPointGeometry","$875966eed124f71792630d0e3dbe6d32$var$readLineStringGeometry","$875966eed124f71792630d0e3dbe6d32$var$readPolygonGeometry","$875966eed124f71792630d0e3dbe6d32$var$readMultiPointGeometry","$875966eed124f71792630d0e3dbe6d32$var$readMultiLineStringGeometry","$875966eed124f71792630d0e3dbe6d32$var$readMultiPolygonGeometry","$875966eed124f71792630d0e3dbe6d32$var$readGeometryCollectionGeometry","geoJSON","$875966eed124f71792630d0e3dbe6d32$var$writePointGeometry","$875966eed124f71792630d0e3dbe6d32$var$writeLineStringGeometry","rightHanded","$875966eed124f71792630d0e3dbe6d32$var$writePolygonGeometry","$875966eed124f71792630d0e3dbe6d32$var$writeMultiPointGeometry","$875966eed124f71792630d0e3dbe6d32$var$writeMultiLineStringGeometry","$875966eed124f71792630d0e3dbe6d32$var$writeMultiPolygonGeometry","$875966eed124f71792630d0e3dbe6d32$var$writeGeometryCollectionGeometry","$02c047e68f445eb8cda2136f7e769458$var$__extends","$02c047e68f445eb8cda2136f7e769458$var$UNITS_PROP","$02c047e68f445eb8cda2136f7e769458$export$Units","$02c047e68f445eb8cda2136f7e769458$var$LEADING_DIGITS","$02c047e68f445eb8cda2136f7e769458$var$DEFAULT_DPI","$02c047e68f445eb8cda2136f7e769458$export$default","ScaleLine","bar","innerElement_","viewState_","minWidth_","minWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","dpi","setDpi","pointResolutionUnits","DEGREES","nominalCount","suffix","metersPerDegree","decimalCount","html","decimal","createScaleBar","toFixed","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","$210d6962da8d34d4657ea1eb0bd8d643$var$upperMapExtent","$210d6962da8d34d4657ea1eb0bd8d643$var$pics","pic01","pic02","pic03","pic04","pic05","pic06","pic07","pic08","pic09","pic10","pic11","pic12","$210d6962da8d34d4657ea1eb0bd8d643$var$projection","$210d6962da8d34d4657ea1eb0bd8d643$var$Set100ProcControl","Set100ProcControl","handleSetTo100proc","$210d6962da8d34d4657ea1eb0bd8d643$var$createTextStyle","$210d6962da8d34d4657ea1eb0bd8d643$var$map","$210d6962da8d34d4657ea1eb0bd8d643$var$currentSecondLayer","$210d6962da8d34d4657ea1eb0bd8d643$var$map2","$210d6962da8d34d4657ea1eb0bd8d643$var$secondMapInitId","$210d6962da8d34d4657ea1eb0bd8d643$var$popup","$210d6962da8d34d4657ea1eb0bd8d643$var$featuresSource","$210d6962da8d34d4657ea1eb0bd8d643$var$geojsonObject","info","$210d6962da8d34d4657ea1eb0bd8d643$var$vectorSource","$210d6962da8d34d4657ea1eb0bd8d643$var$vectorLayer","$210d6962da8d34d4657ea1eb0bd8d643$var$displayFeatureInfo","picId","newLayer","$210d6962da8d34d4657ea1eb0bd8d643$var$updateLayer","$fc8ddd3b2a52e66918673c7ce073c91f$export$setupBindInputs","group","layerid","visibilityInput","$","checked","prop","opacityInput","$fc8ddd3b2a52e66918673c7ce073c91f$export$bindInputs","click","siblings"],"version":3,"file":"index.6394ff40.js.map"}